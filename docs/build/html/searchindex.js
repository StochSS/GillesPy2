Search.setIndex({"alltitles": {"API reference": [[14, null]], "Alternative methods: using the code repository": [[13, "alternative-methods-using-the-code-repository"]], "Basic usage": [[12, null]], "Documentation": [[14, "documentation"]], "Documentation for GillesPy2 1.8.3": [[14, null]], "Example of selecting a different solver": [[12, "example-of-selecting-a-different-solver"]], "Getting a copy of GillesPy2": [[14, "getting-a-copy-of-gillespy2"]], "Getting help": [[14, "getting-help"]], "Getting started": [[14, null]], "Indices and tables": [[14, "indices-and-tables"]], "Installation": [[13, null]], "Module contents": [[0, "module-gillespy2"], [1, "module-gillespy2.core"], [2, "module-gillespy2.sbml"], [3, "module-gillespy2.solvers"], [4, "module-contents"], [5, "module-gillespy2.solvers.cpp"], [6, "module-gillespy2.solvers.cpp.build"], [7, "module-contents"], [8, "module-gillespy2.solvers.numpy"], [9, "module-contents"], [10, "module-gillespy2.solvers.utilities"], [11, "module-gillespy2.stochss"]], "Preferred method: using PyPI": [[13, "preferred-method-using-pypi"]], "Simple example of using GillesPy2": [[12, "simple-example-of-using-gillespy2"]], "Submodules": [[1, "submodules"], [2, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"]], "Subpackages": [[0, "subpackages"], [3, "subpackages"], [5, "subpackages"]], "Tutorial: ODE vs. SSA": [[17, null]], "Tutorial: using SBML": [[16, null]], "Tutorial: using solvers": [[15, null]], "Tutorials": [[14, null]], "gillespy2 package": [[0, null]], "gillespy2.core package": [[1, null]], "gillespy2.core.assignmentrule module": [[1, "module-gillespy2.core.assignmentrule"]], "gillespy2.core.cleanup module": [[1, "module-gillespy2.core.cleanup"]], "gillespy2.core.events module": [[1, "module-gillespy2.core.events"]], "gillespy2.core.functiondefinition module": [[1, "module-gillespy2.core.functiondefinition"]], "gillespy2.core.gillespyError module": [[1, "module-gillespy2.core.gillespyError"]], "gillespy2.core.gillespySolver module": [[1, "module-gillespy2.core.gillespySolver"]], "gillespy2.core.jsonify module": [[1, "module-gillespy2.core.jsonify"]], "gillespy2.core.liveGraphing module": [[1, "module-gillespy2.core.liveGraphing"]], "gillespy2.core.model module": [[1, "module-gillespy2.core.model"]], "gillespy2.core.parameter module": [[1, "module-gillespy2.core.parameter"]], "gillespy2.core.raterule module": [[1, "module-gillespy2.core.raterule"]], "gillespy2.core.reaction module": [[1, "module-gillespy2.core.reaction"]], "gillespy2.core.results module": [[1, "module-gillespy2.core.results"]], "gillespy2.core.sortableobject module": [[1, "module-gillespy2.core.sortableobject"]], "gillespy2.core.species module": [[1, "module-gillespy2.core.species"]], "gillespy2.core.timespan module": [[1, "module-gillespy2.core.timespan"]], "gillespy2.sbml package": [[2, null]], "gillespy2.sbml.SBMLexport module": [[2, "gillespy2-sbml-sbmlexport-module"]], "gillespy2.sbml.SBMLimport module": [[2, "gillespy2-sbml-sbmlimport-module"]], "gillespy2.solvers package": [[3, null]], "gillespy2.solvers.auto package": [[4, null]], "gillespy2.solvers.auto.ssa_solver module": [[4, "gillespy2-solvers-auto-ssa-solver-module"]], "gillespy2.solvers.cpp package": [[5, null]], "gillespy2.solvers.cpp.build package": [[6, null]], "gillespy2.solvers.cpp.build.build_engine module": [[6, "module-gillespy2.solvers.cpp.build.build_engine"]], "gillespy2.solvers.cpp.build.expression module": [[6, "module-gillespy2.solvers.cpp.build.expression"]], "gillespy2.solvers.cpp.build.make module": [[6, "module-gillespy2.solvers.cpp.build.make"]], "gillespy2.solvers.cpp.build.template_gen module": [[6, "module-gillespy2.solvers.cpp.build.template_gen"]], "gillespy2.solvers.cpp.c_decoder module": [[5, "module-gillespy2.solvers.cpp.c_decoder"]], "gillespy2.solvers.cpp.c_solver module": [[5, "module-gillespy2.solvers.cpp.c_solver"]], "gillespy2.solvers.cpp.ode_c_solver module": [[5, "module-gillespy2.solvers.cpp.ode_c_solver"]], "gillespy2.solvers.cpp.ssa_c_solver module": [[5, "module-gillespy2.solvers.cpp.ssa_c_solver"]], "gillespy2.solvers.cpp.tau_hybrid_c_solver module": [[5, "module-gillespy2.solvers.cpp.tau_hybrid_c_solver"]], "gillespy2.solvers.cpp.tau_leaping_c_solver module": [[5, "module-gillespy2.solvers.cpp.tau_leaping_c_solver"]], "gillespy2.solvers.cython package": [[7, null]], "gillespy2.solvers.cython.cython_ssa_solver module": [[7, "gillespy2-solvers-cython-cython-ssa-solver-module"]], "gillespy2.solvers.numpy package": [[8, null]], "gillespy2.solvers.numpy.CLE_solver module": [[8, "module-gillespy2.solvers.numpy.CLE_solver"]], "gillespy2.solvers.numpy.ode_solver module": [[8, "module-gillespy2.solvers.numpy.ode_solver"]], "gillespy2.solvers.numpy.ssa_solver module": [[8, "module-gillespy2.solvers.numpy.ssa_solver"]], "gillespy2.solvers.numpy.tau_hybrid_solver module": [[8, "module-gillespy2.solvers.numpy.tau_hybrid_solver"]], "gillespy2.solvers.numpy.tau_leaping_solver module": [[8, "module-gillespy2.solvers.numpy.tau_leaping_solver"]], "gillespy2.solvers.stochkit package": [[9, null]], "gillespy2.solvers.stochkit.stochkit_solvers module": [[9, "gillespy2-solvers-stochkit-stochkit-solvers-module"]], "gillespy2.solvers.utilities package": [[10, null]], "gillespy2.solvers.utilities.Tau module": [[10, "module-gillespy2.solvers.utilities.Tau"]], "gillespy2.solvers.utilities.cpp_support_test module": [[10, "module-gillespy2.solvers.utilities.cpp_support_test"]], "gillespy2.solvers.utilities.solverutils module": [[10, "module-gillespy2.solvers.utilities.solverutils"]], "gillespy2.stochss package": [[11, null]], "gillespy2.stochss.StochSSexport module": [[11, "module-gillespy2.stochss.StochSSexport"]]}, "docnames": ["classes/gillespy2", "classes/gillespy2.core", "classes/gillespy2.sbml", "classes/gillespy2.solvers", "classes/gillespy2.solvers.auto", "classes/gillespy2.solvers.cpp", "classes/gillespy2.solvers.cpp.build", "classes/gillespy2.solvers.cython", "classes/gillespy2.solvers.numpy", "classes/gillespy2.solvers.stochkit", "classes/gillespy2.solvers.utilities", "classes/gillespy2.stochss", "getting_started/basic_usage/basic_usage", "getting_started/installation/installation", "index", "tutorials/tut_michaelis_menten/tut_michaelis_menten", "tutorials/tut_sbml/tut_sbml", "tutorials/tut_toggle_switch/tut_toggle_switch"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["classes/gillespy2.rst", "classes/gillespy2.core.rst", "classes/gillespy2.sbml.rst", "classes/gillespy2.solvers.rst", "classes/gillespy2.solvers.auto.rst", "classes/gillespy2.solvers.cpp.rst", "classes/gillespy2.solvers.cpp.build.rst", "classes/gillespy2.solvers.cython.rst", "classes/gillespy2.solvers.numpy.rst", "classes/gillespy2.solvers.stochkit.rst", "classes/gillespy2.solvers.utilities.rst", "classes/gillespy2.stochss.rst", "getting_started/basic_usage/basic_usage.rst", "getting_started/installation/installation.rst", "index.rst", "tutorials/tut_michaelis_menten/tut_michaelis_menten.rst", "tutorials/tut_sbml/tut_sbml.rst", "tutorials/tut_toggle_switch/tut_toggle_switch.rst"], "indexentries": {"add() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.add", false]], "add() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.add", false]], "add_assignment() (gillespy2.core.event method)": [[1, "gillespy2.core.Event.add_assignment", false]], "add_assignment() (gillespy2.core.events.event method)": [[1, "gillespy2.core.events.Event.add_assignment", false]], "add_assignment_rule() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.add_assignment_rule", false]], "add_assignment_rule() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.add_assignment_rule", false]], "add_event() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.add_event", false]], "add_event() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.add_event", false]], "add_function_definition() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.add_function_definition", false]], "add_function_definition() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.add_function_definition", false]], "add_parameter() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.add_parameter", false]], "add_parameter() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.add_parameter", false]], "add_product() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.add_product", false]], "add_product() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.add_product", false]], "add_rate_rule() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.add_rate_rule", false]], "add_rate_rule() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.add_rate_rule", false]], "add_reactant() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.add_reactant", false]], "add_reactant() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.add_reactant", false]], "add_reaction() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.add_reaction", false]], "add_reaction() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.add_reaction", false]], "add_species() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.add_species", false]], "add_species() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.add_species", false]], "addproduct() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.addProduct", false]], "addproduct() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.addProduct", false]], "addreactant() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.addReactant", false]], "addreactant() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.addReactant", false]], "annotate() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.Annotate", false]], "annotate() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.Annotate", false]], "append() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.append", false]], "arange() (gillespy2.core.timespan class method)": [[1, "gillespy2.core.TimeSpan.arange", false]], "arange() (gillespy2.core.timespan.timespan class method)": [[1, "gillespy2.core.timespan.TimeSpan.arange", false]], "assignmentrule (class in gillespy2.core)": [[1, "gillespy2.core.AssignmentRule", false]], "assignmentrule (class in gillespy2.core.assignmentrule)": [[1, "gillespy2.core.assignmentrule.AssignmentRule", false]], "assignmentruleerror": [[1, "gillespy2.core.AssignmentRuleError", false], [1, "gillespy2.core.gillespyError.AssignmentRuleError", false]], "astimezone() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.astimezone", false]], "average_ensemble() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.average_ensemble", false]], "average_ensemble() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.average_ensemble", false]], "basicsimdecoder (class in gillespy2.solvers.cpp.c_decoder)": [[5, "gillespy2.solvers.cpp.c_decoder.BasicSimDecoder", false]], "build_cache() (gillespy2.solvers.cpp.build.build_engine.buildengine method)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine.build_cache", false]], "build_engine (gillespy2.solvers.cpp.odecsolver attribute)": [[5, "gillespy2.solvers.cpp.ODECSolver.build_engine", false]], "build_engine (gillespy2.solvers.cpp.ssacsolver attribute)": [[5, "gillespy2.solvers.cpp.SSACSolver.build_engine", false]], "build_engine (gillespy2.solvers.cpp.tauhybridcsolver attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.build_engine", false]], "build_engine (gillespy2.solvers.cpp.tauleapingcsolver attribute)": [[5, "gillespy2.solvers.cpp.TauLeapingCSolver.build_engine", false]], "build_from_solver_results() (gillespy2.core.results class method)": [[1, "gillespy2.core.Results.build_from_solver_results", false]], "build_from_solver_results() (gillespy2.core.results.results class method)": [[1, "gillespy2.core.results.Results.build_from_solver_results", false]], "build_simulation() (gillespy2.solvers.cpp.build.build_engine.buildengine method)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine.build_simulation", false]], "build_simulation() (gillespy2.solvers.cpp.build.make.make method)": [[6, "gillespy2.solvers.cpp.build.make.Make.build_simulation", false]], "buildengine (class in gillespy2.solvers.cpp.build.build_engine)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine", false]], "builderror": [[1, "gillespy2.core.BuildError", false], [1, "gillespy2.core.gillespyError.BuildError", false]], "chainmap (class in gillespy2.core)": [[1, "gillespy2.core.ChainMap", false]], "change_param_values() (in module gillespy2.solvers.utilities.solverutils)": [[10, "gillespy2.solvers.utilities.solverutils.change_param_values", false]], "check_blacklist() (gillespy2.solvers.cpp.build.expression.expression.validationvisitor method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor.check_blacklist", false]], "check_cpp_support() (in module gillespy2.solvers.utilities.cpp_support_test)": [[10, "gillespy2.solvers.utilities.cpp_support_test.check_cpp_support", false]], "clean() (gillespy2.solvers.cpp.build.build_engine.buildengine method)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine.clean", false]], "cleanup_tempfiles() (in module gillespy2.core)": [[1, "gillespy2.core.cleanup_tempfiles", false]], "cleanup_tempfiles() (in module gillespy2.core.cleanup)": [[1, "gillespy2.core.cleanup.cleanup_tempfiles", false]], "clear() (gillespy2.core.chainmap method)": [[1, "gillespy2.core.ChainMap.clear", false]], "clear() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.clear", false]], "clear() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.clear", false]], "clesolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.CLESolver", false]], "clesolver (class in gillespy2.solvers.numpy)": [[8, "gillespy2.solvers.numpy.CLESolver", false]], "clesolver (class in gillespy2.solvers.numpy.cle_solver)": [[8, "gillespy2.solvers.numpy.CLE_solver.CLESolver", false]], "combine() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.combine", false]], "common_rgb_values() (in module gillespy2.core)": [[1, "gillespy2.core.common_rgb_values", false]], "common_rgb_values() (in module gillespy2.core.results)": [[1, "gillespy2.core.results.common_rgb_values", false]], "compile_prep() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.compile_prep", false]], "compile_prep() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.compile_prep", false]], "complexjsoncoder (class in gillespy2.core.jsonify)": [[1, "gillespy2.core.jsonify.ComplexJsonCoder", false]], "convert_str() (gillespy2.solvers.cpp.build.expression.expressionconverter class method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.convert_str", false]], "copy() (gillespy2.core.chainmap method)": [[1, "gillespy2.core.ChainMap.copy", false]], "copy() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.copy", false]], "copy() (gillespy2.core.userdict method)": [[1, "gillespy2.core.UserDict.copy", false]], "copy() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.copy", false]], "count() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.count", false]], "cppconverter (class in gillespy2.solvers.cpp.build.expression)": [[6, "gillespy2.solvers.cpp.build.expression.CppConverter", false]], "cppconverter.cppexpressiontransformer (class in gillespy2.solvers.cpp.build.expression)": [[6, "gillespy2.solvers.cpp.build.expression.CppConverter.CppExpressionTransformer", false]], "create_default() (gillespy2.solvers.cpp.c_decoder.simdecoder class method)": [[5, "gillespy2.solvers.cpp.c_decoder.SimDecoder.create_default", false]], "create_mass_action() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.create_mass_action", false]], "create_mass_action() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.create_mass_action", false]], "crepeattimer (class in gillespy2.core.livegraphing)": [[1, "gillespy2.core.liveGraphing.CRepeatTimer", false]], "csolver (class in gillespy2.solvers.cpp.c_solver)": [[5, "gillespy2.solvers.cpp.c_solver.CSolver", false]], "ctime() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.ctime", false]], "date() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.date", false]], "datetime (class in gillespy2.core)": [[1, "gillespy2.core.datetime", false]], "decode() (gillespy2.core.jsonify.complexjsoncoder method)": [[1, "gillespy2.core.jsonify.ComplexJsonCoder.decode", false]], "default() (gillespy2.core.jsonify.complexjsoncoder method)": [[1, "gillespy2.core.jsonify.ComplexJsonCoder.default", false]], "delete_all_assignment_rules() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_all_assignment_rules", false]], "delete_all_assignment_rules() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_all_assignment_rules", false]], "delete_all_events() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_all_events", false]], "delete_all_events() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_all_events", false]], "delete_all_function_definitions() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_all_function_definitions", false]], "delete_all_function_definitions() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_all_function_definitions", false]], "delete_all_parameters() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_all_parameters", false]], "delete_all_parameters() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_all_parameters", false]], "delete_all_rate_rules() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_all_rate_rules", false]], "delete_all_rate_rules() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_all_rate_rules", false]], "delete_all_reactions() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_all_reactions", false]], "delete_all_reactions() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_all_reactions", false]], "delete_all_species() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_all_species", false]], "delete_all_species() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_all_species", false]], "delete_assignment_rule() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_assignment_rule", false]], "delete_assignment_rule() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_assignment_rule", false]], "delete_event() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_event", false]], "delete_event() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_event", false]], "delete_function_definition() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_function_definition", false]], "delete_function_definition() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_function_definition", false]], "delete_parameter() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_parameter", false]], "delete_parameter() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_parameter", false]], "delete_rate_rule() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_rate_rule", false]], "delete_rate_rule() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_rate_rule", false]], "delete_reaction() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_reaction", false]], "delete_reaction() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_reaction", false]], "delete_species() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.delete_species", false]], "delete_species() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.delete_species", false]], "dependency_grapher() (in module gillespy2.solvers.utilities.solverutils)": [[10, "gillespy2.solvers.utilities.solverutils.dependency_grapher", false]], "directoryerror": [[1, "gillespy2.core.DirectoryError", false], [1, "gillespy2.core.gillespyError.DirectoryError", false]], "display() (gillespy2.core.livegraphing.livedisplayer method)": [[1, "gillespy2.core.liveGraphing.LiveDisplayer.display", false]], "display_types() (in module gillespy2.core.livegraphing)": [[1, "gillespy2.core.liveGraphing.display_types", false]], "done (gillespy2.solvers.cpp.c_solver.simulationreturncode attribute)": [[5, "gillespy2.solvers.cpp.c_solver.SimulationReturnCode.DONE", false]], "dst() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.dst", false]], "event (class in gillespy2.core)": [[1, "gillespy2.core.Event", false]], "event (class in gillespy2.core.events)": [[1, "gillespy2.core.events.Event", false]], "eventassignment (class in gillespy2.core)": [[1, "gillespy2.core.EventAssignment", false]], "eventassignment (class in gillespy2.core.events)": [[1, "gillespy2.core.events.EventAssignment", false]], "eventerror": [[1, "gillespy2.core.EventError", false], [1, "gillespy2.core.gillespyError.EventError", false]], "eventtrigger (class in gillespy2.core)": [[1, "gillespy2.core.EventTrigger", false]], "eventtrigger (class in gillespy2.core.events)": [[1, "gillespy2.core.events.EventTrigger", false]], "executionerror": [[1, "gillespy2.core.ExecutionError", false], [1, "gillespy2.core.gillespyError.ExecutionError", false]], "export() (in module gillespy2.stochss.stochssexport)": [[11, "gillespy2.stochss.StochSSexport.export", false]], "export_sbml() (in module gillespy2.core)": [[1, "gillespy2.core.export_SBML", false]], "export_sbml() (in module gillespy2.core.model)": [[1, "gillespy2.core.model.export_SBML", false]], "export_stochss() (in module gillespy2.core)": [[1, "gillespy2.core.export_StochSS", false]], "export_stochss() (in module gillespy2.core.model)": [[1, "gillespy2.core.model.export_StochSS", false]], "expression (class in gillespy2.solvers.cpp.build.expression)": [[6, "gillespy2.solvers.cpp.build.expression.Expression", false]], "expression.validationvisitor (class in gillespy2.solvers.cpp.build.expression)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor", false]], "expressionconverter (class in gillespy2.solvers.cpp.build.expression)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter", false]], "expressionresults (class in gillespy2.solvers.cpp.build.expression)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionResults", false]], "extend() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.extend", false]], "failed (gillespy2.solvers.cpp.c_solver.simulationreturncode attribute)": [[5, "gillespy2.solvers.cpp.c_solver.SimulationReturnCode.FAILED", false]], "fold (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.fold", false]], "from_dict() (gillespy2.core.jsonify class method)": [[1, "gillespy2.core.Jsonify.from_dict", false]], "from_dict() (gillespy2.core.jsonify.jsonify class method)": [[1, "gillespy2.core.jsonify.Jsonify.from_dict", false]], "from_file() (gillespy2.core.model.stochmldocument class method)": [[1, "gillespy2.core.model.StochMLDocument.from_file", false]], "from_file() (gillespy2.core.stochmldocument class method)": [[1, "gillespy2.core.StochMLDocument.from_file", false]], "from_json() (gillespy2.core.jsonify class method)": [[1, "gillespy2.core.Jsonify.from_json", false]], "from_json() (gillespy2.core.jsonify.int64coder static method)": [[1, "gillespy2.core.jsonify.Int64Coder.from_json", false]], "from_json() (gillespy2.core.jsonify.jsonify class method)": [[1, "gillespy2.core.jsonify.Jsonify.from_json", false]], "from_json() (gillespy2.core.jsonify.ndarraycoder static method)": [[1, "gillespy2.core.jsonify.NdArrayCoder.from_json", false]], "from_json() (gillespy2.core.jsonify.setcoder static method)": [[1, "gillespy2.core.jsonify.SetCoder.from_json", false]], "from_json() (gillespy2.core.jsonify.typecoder static method)": [[1, "gillespy2.core.jsonify.TypeCoder.from_json", false]], "from_json() (gillespy2.core.reaction class method)": [[1, "gillespy2.core.Reaction.from_json", false]], "from_json() (gillespy2.core.reaction.reaction class method)": [[1, "gillespy2.core.reaction.Reaction.from_json", false]], "from_model() (gillespy2.core.model.stochmldocument class method)": [[1, "gillespy2.core.model.StochMLDocument.from_model", false]], "from_model() (gillespy2.core.stochmldocument class method)": [[1, "gillespy2.core.StochMLDocument.from_model", false]], "from_string() (gillespy2.core.model.stochmldocument class method)": [[1, "gillespy2.core.model.StochMLDocument.from_string", false]], "from_string() (gillespy2.core.stochmldocument class method)": [[1, "gillespy2.core.StochMLDocument.from_string", false]], "fromisoformat() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.fromisoformat", false]], "fromkeys() (gillespy2.core.chainmap class method)": [[1, "gillespy2.core.ChainMap.fromkeys", false]], "fromkeys() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.fromkeys", false]], "fromkeys() (gillespy2.core.userdict class method)": [[1, "gillespy2.core.UserDict.fromkeys", false]], "fromtimestamp() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.fromtimestamp", false]], "function_map (gillespy2.solvers.cpp.build.template_gen.sanitizedmodel attribute)": [[6, "gillespy2.solvers.cpp.build.template_gen.SanitizedModel.function_map", false]], "functiondefinition (class in gillespy2.core)": [[1, "gillespy2.core.FunctionDefinition", false]], "functiondefinition (class in gillespy2.core.functiondefinition)": [[1, "gillespy2.core.functiondefinition.FunctionDefinition", false]], "functiondefinitionerror": [[1, "gillespy2.core.FunctionDefinitionError", false], [1, "gillespy2.core.gillespyError.FunctionDefinitionError", false]], "get() (gillespy2.core.chainmap method)": [[1, "gillespy2.core.ChainMap.get", false]], "get() (gillespy2.core.userdict method)": [[1, "gillespy2.core.UserDict.get", false]], "get_all_assignment_rules() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_all_assignment_rules", false]], "get_all_assignment_rules() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_all_assignment_rules", false]], "get_all_events() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_all_events", false]], "get_all_events() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_all_events", false]], "get_all_function_definitions() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_all_function_definitions", false]], "get_all_function_definitions() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_all_function_definitions", false]], "get_all_parameters() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_all_parameters", false]], "get_all_parameters() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_all_parameters", false]], "get_all_rate_rules() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_all_rate_rules", false]], "get_all_rate_rules() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_all_rate_rules", false]], "get_all_reactions() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_all_reactions", false]], "get_all_reactions() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_all_reactions", false]], "get_all_species() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_all_species", false]], "get_all_species() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_all_species", false]], "get_arg_string() (gillespy2.core.functiondefinition method)": [[1, "gillespy2.core.FunctionDefinition.get_arg_string", false]], "get_arg_string() (gillespy2.core.functiondefinition.functiondefinition method)": [[1, "gillespy2.core.functiondefinition.FunctionDefinition.get_arg_string", false]], "get_assignment_rule() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_assignment_rule", false]], "get_assignment_rule() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_assignment_rule", false]], "get_best_solver() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_best_solver", false]], "get_best_solver() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_best_solver", false]], "get_best_solver_algo() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_best_solver_algo", false]], "get_best_solver_algo() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_best_solver_algo", false]], "get_element() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_element", false]], "get_element() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_element", false]], "get_event() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_event", false]], "get_event() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_event", false]], "get_executable_path() (gillespy2.solvers.cpp.build.build_engine.buildengine method)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine.get_executable_path", false]], "get_function_definition() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_function_definition", false]], "get_function_definition() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_function_definition", false]], "get_json_hash() (gillespy2.core.jsonify method)": [[1, "gillespy2.core.Jsonify.get_json_hash", false]], "get_json_hash() (gillespy2.core.jsonify.jsonify method)": [[1, "gillespy2.core.jsonify.Jsonify.get_json_hash", false]], "get_missing_dependencies() (gillespy2.solvers.cpp.build.build_engine.buildengine class method)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine.get_missing_dependencies", false]], "get_model_defines() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.get_model_defines", false]], "get_model_features() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_model_features", false]], "get_model_features() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_model_features", false]], "get_options() (gillespy2.solvers.cpp.build.template_gen.sanitizedmodel method)": [[6, "gillespy2.solvers.cpp.build.template_gen.SanitizedModel.get_options", false]], "get_output() (gillespy2.solvers.cpp.c_decoder.basicsimdecoder method)": [[5, "gillespy2.solvers.cpp.c_decoder.BasicSimDecoder.get_output", false]], "get_output() (gillespy2.solvers.cpp.c_decoder.iterativesimdecoder method)": [[5, "gillespy2.solvers.cpp.c_decoder.IterativeSimDecoder.get_output", false]], "get_output() (gillespy2.solvers.cpp.c_decoder.simdecoder method)": [[5, "gillespy2.solvers.cpp.c_decoder.SimDecoder.get_output", false]], "get_parameter() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_parameter", false]], "get_parameter() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_parameter", false]], "get_rate_rule() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_rate_rule", false]], "get_rate_rule() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_rate_rule", false]], "get_reaction() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_reaction", false]], "get_reaction() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_reaction", false]], "get_solver_settings() (gillespy2.core.gillespysolver method)": [[1, "gillespy2.core.GillesPySolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.core.gillespysolver.gillespysolver method)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.clesolver class method)": [[3, "gillespy2.solvers.CLESolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.cpp.ode_c_solver.odecsolver class method)": [[5, "gillespy2.solvers.cpp.ode_c_solver.ODECSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.cpp.odecsolver class method)": [[5, "gillespy2.solvers.cpp.ODECSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.cpp.ssa_c_solver.ssacsolver class method)": [[5, "gillespy2.solvers.cpp.ssa_c_solver.SSACSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.cpp.ssacsolver class method)": [[5, "gillespy2.solvers.cpp.SSACSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver class method)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.cpp.tau_leaping_c_solver.tauleapingcsolver class method)": [[5, "gillespy2.solvers.cpp.tau_leaping_c_solver.TauLeapingCSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.cpp.tauhybridcsolver class method)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.cpp.tauleapingcsolver class method)": [[5, "gillespy2.solvers.cpp.TauLeapingCSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.cle_solver.clesolver class method)": [[8, "gillespy2.solvers.numpy.CLE_solver.CLESolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.clesolver class method)": [[8, "gillespy2.solvers.numpy.CLESolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.numpyssasolver class method)": [[8, "gillespy2.solvers.numpy.NumPySSASolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.ode_solver.odesolver class method)": [[8, "gillespy2.solvers.numpy.ode_solver.ODESolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.odesolver class method)": [[8, "gillespy2.solvers.numpy.ODESolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.ssa_solver.numpyssasolver class method)": [[8, "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.tau_hybrid_solver.tauhybridsolver class method)": [[8, "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.tau_leaping_solver.tauleapingsolver class method)": [[8, "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.tauhybridsolver class method)": [[8, "gillespy2.solvers.numpy.TauHybridSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpy.tauleapingsolver class method)": [[8, "gillespy2.solvers.numpy.TauLeapingSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.numpyssasolver class method)": [[3, "gillespy2.solvers.NumPySSASolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.odecsolver class method)": [[3, "gillespy2.solvers.ODECSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.odesolver class method)": [[3, "gillespy2.solvers.ODESolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.ssacsolver class method)": [[3, "gillespy2.solvers.SSACSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.tauhybridcsolver class method)": [[3, "gillespy2.solvers.TauHybridCSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.tauhybridsolver class method)": [[3, "gillespy2.solvers.TauHybridSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.tauleapingcsolver class method)": [[3, "gillespy2.solvers.TauLeapingCSolver.get_solver_settings", false]], "get_solver_settings() (gillespy2.solvers.tauleapingsolver class method)": [[3, "gillespy2.solvers.TauLeapingSolver.get_solver_settings", false]], "get_species() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.get_species", false]], "get_species() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.get_species", false]], "get_str() (gillespy2.solvers.cpp.build.expression.cppconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.CppConverter.get_str", false]], "get_str() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.get_str", false]], "get_supported_features() (gillespy2.core.gillespysolver class method)": [[1, "gillespy2.core.GillesPySolver.get_supported_features", false]], "get_supported_features() (gillespy2.core.gillespysolver.gillespysolver class method)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.get_supported_features", false]], "get_supported_features() (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver class method)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.get_supported_features", false]], "get_supported_features() (gillespy2.solvers.cpp.tauhybridcsolver class method)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.get_supported_features", false]], "get_supported_features() (gillespy2.solvers.numpy.tau_hybrid_solver.tauhybridsolver class method)": [[8, "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver.get_supported_features", false]], "get_supported_features() (gillespy2.solvers.numpy.tauhybridsolver class method)": [[8, "gillespy2.solvers.numpy.TauHybridSolver.get_supported_features", false]], "get_supported_features() (gillespy2.solvers.tauhybridcsolver class method)": [[3, "gillespy2.solvers.TauHybridCSolver.get_supported_features", false]], "get_supported_features() (gillespy2.solvers.tauhybridsolver class method)": [[3, "gillespy2.solvers.TauHybridSolver.get_supported_features", false]], "get_supported_integrator_options() (gillespy2.core.gillespysolver class method)": [[1, "gillespy2.core.GillesPySolver.get_supported_integrator_options", false]], "get_supported_integrator_options() (gillespy2.core.gillespysolver.gillespysolver class method)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.get_supported_integrator_options", false]], "get_supported_integrator_options() (gillespy2.solvers.cpp.ode_c_solver.odecsolver static method)": [[5, "gillespy2.solvers.cpp.ode_c_solver.ODECSolver.get_supported_integrator_options", false]], "get_supported_integrator_options() (gillespy2.solvers.cpp.odecsolver static method)": [[5, "gillespy2.solvers.cpp.ODECSolver.get_supported_integrator_options", false]], "get_supported_integrator_options() (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver class method)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.get_supported_integrator_options", false]], "get_supported_integrator_options() (gillespy2.solvers.cpp.tauhybridcsolver class method)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.get_supported_integrator_options", false]], "get_supported_integrator_options() (gillespy2.solvers.odecsolver static method)": [[3, "gillespy2.solvers.ODECSolver.get_supported_integrator_options", false]], "get_supported_integrator_options() (gillespy2.solvers.tauhybridcsolver class method)": [[3, "gillespy2.solvers.TauHybridCSolver.get_supported_integrator_options", false]], "get_template() (gillespy2.solvers.cpp.build.template_gen.sanitizedmodel method)": [[6, "gillespy2.solvers.cpp.build.template_gen.SanitizedModel.get_template", false]], "get_translation_table() (gillespy2.core.jsonify method)": [[1, "gillespy2.core.Jsonify.get_translation_table", false]], "get_translation_table() (gillespy2.core.jsonify.jsonify method)": [[1, "gillespy2.core.jsonify.Jsonify.get_translation_table", false]], "getexpr_cpp() (gillespy2.solvers.cpp.build.expression.expression method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.getexpr_cpp", false]], "getexpr_python() (gillespy2.solvers.cpp.build.expression.expression method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.getexpr_python", false]], "gillespy2": [[0, "module-gillespy2", false]], "gillespy2.core": [[1, "module-gillespy2.core", false]], "gillespy2.core.assignmentrule": [[1, "module-gillespy2.core.assignmentrule", false]], "gillespy2.core.cleanup": [[1, "module-gillespy2.core.cleanup", false]], "gillespy2.core.events": [[1, "module-gillespy2.core.events", false]], "gillespy2.core.functiondefinition": [[1, "module-gillespy2.core.functiondefinition", false]], "gillespy2.core.gillespyerror": [[1, "module-gillespy2.core.gillespyError", false]], "gillespy2.core.gillespysolver": [[1, "module-gillespy2.core.gillespySolver", false]], "gillespy2.core.jsonify": [[1, "module-gillespy2.core.jsonify", false]], "gillespy2.core.livegraphing": [[1, "module-gillespy2.core.liveGraphing", false]], "gillespy2.core.model": [[1, "module-gillespy2.core.model", false]], "gillespy2.core.parameter": [[1, "module-gillespy2.core.parameter", false]], "gillespy2.core.raterule": [[1, "module-gillespy2.core.raterule", false]], "gillespy2.core.reaction": [[1, "module-gillespy2.core.reaction", false]], "gillespy2.core.results": [[1, "module-gillespy2.core.results", false]], "gillespy2.core.sortableobject": [[1, "module-gillespy2.core.sortableobject", false]], "gillespy2.core.species": [[1, "module-gillespy2.core.species", false]], "gillespy2.core.timespan": [[1, "module-gillespy2.core.timespan", false]], "gillespy2.sbml": [[2, "module-gillespy2.sbml", false]], "gillespy2.solvers": [[3, "module-gillespy2.solvers", false]], "gillespy2.solvers.cpp": [[5, "module-gillespy2.solvers.cpp", false]], "gillespy2.solvers.cpp.build": [[6, "module-gillespy2.solvers.cpp.build", false]], "gillespy2.solvers.cpp.build.build_engine": [[6, "module-gillespy2.solvers.cpp.build.build_engine", false]], "gillespy2.solvers.cpp.build.expression": [[6, "module-gillespy2.solvers.cpp.build.expression", false]], "gillespy2.solvers.cpp.build.make": [[6, "module-gillespy2.solvers.cpp.build.make", false]], "gillespy2.solvers.cpp.build.template_gen": [[6, "module-gillespy2.solvers.cpp.build.template_gen", false]], "gillespy2.solvers.cpp.c_decoder": [[5, "module-gillespy2.solvers.cpp.c_decoder", false]], "gillespy2.solvers.cpp.c_solver": [[5, "module-gillespy2.solvers.cpp.c_solver", false]], "gillespy2.solvers.cpp.ode_c_solver": [[5, "module-gillespy2.solvers.cpp.ode_c_solver", false]], "gillespy2.solvers.cpp.ssa_c_solver": [[5, "module-gillespy2.solvers.cpp.ssa_c_solver", false]], "gillespy2.solvers.cpp.tau_hybrid_c_solver": [[5, "module-gillespy2.solvers.cpp.tau_hybrid_c_solver", false]], "gillespy2.solvers.cpp.tau_leaping_c_solver": [[5, "module-gillespy2.solvers.cpp.tau_leaping_c_solver", false]], "gillespy2.solvers.numpy": [[8, "module-gillespy2.solvers.numpy", false]], "gillespy2.solvers.numpy.cle_solver": [[8, "module-gillespy2.solvers.numpy.CLE_solver", false]], "gillespy2.solvers.numpy.ode_solver": [[8, "module-gillespy2.solvers.numpy.ode_solver", false]], "gillespy2.solvers.numpy.ssa_solver": [[8, "module-gillespy2.solvers.numpy.ssa_solver", false]], "gillespy2.solvers.numpy.tau_hybrid_solver": [[8, "module-gillespy2.solvers.numpy.tau_hybrid_solver", false]], "gillespy2.solvers.numpy.tau_leaping_solver": [[8, "module-gillespy2.solvers.numpy.tau_leaping_solver", false]], "gillespy2.solvers.utilities": [[10, "module-gillespy2.solvers.utilities", false]], "gillespy2.solvers.utilities.cpp_support_test": [[10, "module-gillespy2.solvers.utilities.cpp_support_test", false]], "gillespy2.solvers.utilities.solverutils": [[10, "module-gillespy2.solvers.utilities.solverutils", false]], "gillespy2.solvers.utilities.tau": [[10, "module-gillespy2.solvers.utilities.Tau", false]], "gillespy2.stochss": [[11, "module-gillespy2.stochss", false]], "gillespy2.stochss.stochssexport": [[11, "module-gillespy2.stochss.StochSSexport", false]], "gillespysolver (class in gillespy2.core)": [[1, "gillespy2.core.GillesPySolver", false]], "gillespysolver (class in gillespy2.core.gillespysolver)": [[1, "gillespy2.core.gillespySolver.GillesPySolver", false]], "hour (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.hour", false]], "import_sbml() (in module gillespy2.core)": [[1, "gillespy2.core.import_SBML", false]], "import_sbml() (in module gillespy2.core.model)": [[1, "gillespy2.core.model.import_SBML", false]], "increment_trajectory() (gillespy2.core.livegraphing.livedisplayer method)": [[1, "gillespy2.core.liveGraphing.LiveDisplayer.increment_trajectory", false]], "index() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.index", false]], "initialize() (in module gillespy2.solvers.utilities.tau)": [[10, "gillespy2.solvers.utilities.Tau.initialize", false]], "insert() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.insert", false]], "int64coder (class in gillespy2.core.jsonify)": [[1, "gillespy2.core.jsonify.Int64Coder", false]], "integrator_failed (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.ErrorStatus.INTEGRATOR_FAILED", false]], "integrator_failed (gillespy2.solvers.cpp.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.ErrorStatus.INTEGRATOR_FAILED", false]], "integrator_failed (gillespy2.solvers.tauhybridcsolver.errorstatus attribute)": [[3, "gillespy2.solvers.TauHybridCSolver.ErrorStatus.INTEGRATOR_FAILED", false]], "invalid_after_ssa (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.ErrorStatus.INVALID_AFTER_SSA", false]], "invalid_after_ssa (gillespy2.solvers.cpp.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.ErrorStatus.INVALID_AFTER_SSA", false]], "invalid_after_ssa (gillespy2.solvers.tauhybridcsolver.errorstatus attribute)": [[3, "gillespy2.solvers.TauHybridCSolver.ErrorStatus.INVALID_AFTER_SSA", false]], "invalidmodelerror": [[1, "gillespy2.core.InvalidModelError", false], [1, "gillespy2.core.gillespyError.InvalidModelError", false]], "invalidstochmlerror": [[1, "gillespy2.core.InvalidStochMLError", false], [1, "gillespy2.core.gillespyError.InvalidStochMLError", false]], "isoformat() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.isoformat", false]], "items() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.items", false]], "iterativesimdecoder (class in gillespy2.solvers.cpp.c_decoder)": [[5, "gillespy2.solvers.cpp.c_decoder.IterativeSimDecoder", false]], "jsonify (class in gillespy2.core)": [[1, "gillespy2.core.Jsonify", false]], "jsonify (class in gillespy2.core.jsonify)": [[1, "gillespy2.core.jsonify.Jsonify", false]], "keys() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.keys", false]], "linspace() (gillespy2.core.timespan class method)": [[1, "gillespy2.core.TimeSpan.linspace", false]], "linspace() (gillespy2.core.timespan.timespan class method)": [[1, "gillespy2.core.timespan.TimeSpan.linspace", false]], "livedisplayer (class in gillespy2.core.livegraphing)": [[1, "gillespy2.core.liveGraphing.LiveDisplayer", false]], "loop_over_integrate (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.ErrorStatus.LOOP_OVER_INTEGRATE", false]], "loop_over_integrate (gillespy2.solvers.cpp.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.ErrorStatus.LOOP_OVER_INTEGRATE", false]], "loop_over_integrate (gillespy2.solvers.tauhybridcsolver.errorstatus attribute)": [[3, "gillespy2.solvers.TauHybridCSolver.ErrorStatus.LOOP_OVER_INTEGRATE", false]], "make (class in gillespy2.solvers.cpp.build.make)": [[6, "gillespy2.solvers.cpp.build.make.Make", false]], "make_translation_table() (gillespy2.core.jsonify method)": [[1, "gillespy2.core.Jsonify.make_translation_table", false]], "make_translation_table() (gillespy2.core.jsonify.jsonify method)": [[1, "gillespy2.core.jsonify.Jsonify.make_translation_table", false]], "make_translation_table() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.make_translation_table", false]], "make_translation_table() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.make_translation_table", false]], "map_operator() (gillespy2.solvers.cpp.build.expression.expression class method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.map_operator", false]], "max (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.max", false]], "microsecond (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.microsecond", false]], "min (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.min", false]], "minute (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.minute", false]], "model (class in gillespy2.core)": [[1, "gillespy2.core.Model", false]], "model (class in gillespy2.core.model)": [[1, "gillespy2.core.model.Model", false]], "modelerror": [[1, "gillespy2.core.ModelError", false], [1, "gillespy2.core.gillespyError.ModelError", false]], "module": [[0, "module-gillespy2", false], [1, "module-gillespy2.core", false], [1, "module-gillespy2.core.assignmentrule", false], [1, "module-gillespy2.core.cleanup", false], [1, "module-gillespy2.core.events", false], [1, "module-gillespy2.core.functiondefinition", false], [1, "module-gillespy2.core.gillespyError", false], [1, "module-gillespy2.core.gillespySolver", false], [1, "module-gillespy2.core.jsonify", false], [1, "module-gillespy2.core.liveGraphing", false], [1, "module-gillespy2.core.model", false], [1, "module-gillespy2.core.parameter", false], [1, "module-gillespy2.core.raterule", false], [1, "module-gillespy2.core.reaction", false], [1, "module-gillespy2.core.results", false], [1, "module-gillespy2.core.sortableobject", false], [1, "module-gillespy2.core.species", false], [1, "module-gillespy2.core.timespan", false], [2, "module-gillespy2.sbml", false], [3, "module-gillespy2.solvers", false], [5, "module-gillespy2.solvers.cpp", false], [5, "module-gillespy2.solvers.cpp.c_decoder", false], [5, "module-gillespy2.solvers.cpp.c_solver", false], [5, "module-gillespy2.solvers.cpp.ode_c_solver", false], [5, "module-gillespy2.solvers.cpp.ssa_c_solver", false], [5, "module-gillespy2.solvers.cpp.tau_hybrid_c_solver", false], [5, "module-gillespy2.solvers.cpp.tau_leaping_c_solver", false], [6, "module-gillespy2.solvers.cpp.build", false], [6, "module-gillespy2.solvers.cpp.build.build_engine", false], [6, "module-gillespy2.solvers.cpp.build.expression", false], [6, "module-gillespy2.solvers.cpp.build.make", false], [6, "module-gillespy2.solvers.cpp.build.template_gen", false], [8, "module-gillespy2.solvers.numpy", false], [8, "module-gillespy2.solvers.numpy.CLE_solver", false], [8, "module-gillespy2.solvers.numpy.ode_solver", false], [8, "module-gillespy2.solvers.numpy.ssa_solver", false], [8, "module-gillespy2.solvers.numpy.tau_hybrid_solver", false], [8, "module-gillespy2.solvers.numpy.tau_leaping_solver", false], [10, "module-gillespy2.solvers.utilities", false], [10, "module-gillespy2.solvers.utilities.Tau", false], [10, "module-gillespy2.solvers.utilities.cpp_support_test", false], [10, "module-gillespy2.solvers.utilities.solverutils", false], [11, "module-gillespy2.stochss", false], [11, "module-gillespy2.stochss.StochSSexport", false]], "move_to_end() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.move_to_end", false]], "name (gillespy2.core.gillespysolver attribute)": [[1, "gillespy2.core.GillesPySolver.name", false]], "name (gillespy2.core.gillespysolver.gillespysolver attribute)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.name", false]], "name (gillespy2.solvers.clesolver attribute)": [[3, "gillespy2.solvers.CLESolver.name", false]], "name (gillespy2.solvers.cpp.ode_c_solver.odecsolver attribute)": [[5, "gillespy2.solvers.cpp.ode_c_solver.ODECSolver.name", false]], "name (gillespy2.solvers.cpp.odecsolver attribute)": [[5, "gillespy2.solvers.cpp.ODECSolver.name", false]], "name (gillespy2.solvers.cpp.ssa_c_solver.ssacsolver attribute)": [[5, "gillespy2.solvers.cpp.ssa_c_solver.SSACSolver.name", false]], "name (gillespy2.solvers.cpp.ssacsolver attribute)": [[5, "gillespy2.solvers.cpp.SSACSolver.name", false]], "name (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver attribute)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.name", false]], "name (gillespy2.solvers.cpp.tau_leaping_c_solver.tauleapingcsolver attribute)": [[5, "gillespy2.solvers.cpp.tau_leaping_c_solver.TauLeapingCSolver.name", false]], "name (gillespy2.solvers.cpp.tauhybridcsolver attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.name", false]], "name (gillespy2.solvers.cpp.tauleapingcsolver attribute)": [[5, "gillespy2.solvers.cpp.TauLeapingCSolver.name", false]], "name (gillespy2.solvers.numpy.cle_solver.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLE_solver.CLESolver.name", false]], "name (gillespy2.solvers.numpy.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLESolver.name", false]], "name (gillespy2.solvers.numpy.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.NumPySSASolver.name", false]], "name (gillespy2.solvers.numpy.ode_solver.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ode_solver.ODESolver.name", false]], "name (gillespy2.solvers.numpy.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ODESolver.name", false]], "name (gillespy2.solvers.numpy.ssa_solver.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver.name", false]], "name (gillespy2.solvers.numpy.tau_hybrid_solver.tauhybridsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver.name", false]], "name (gillespy2.solvers.numpy.tau_leaping_solver.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver.name", false]], "name (gillespy2.solvers.numpy.tauhybridsolver attribute)": [[8, "gillespy2.solvers.numpy.TauHybridSolver.name", false]], "name (gillespy2.solvers.numpy.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.TauLeapingSolver.name", false]], "name (gillespy2.solvers.numpyssasolver attribute)": [[3, "gillespy2.solvers.NumPySSASolver.name", false]], "name (gillespy2.solvers.odecsolver attribute)": [[3, "gillespy2.solvers.ODECSolver.name", false]], "name (gillespy2.solvers.odesolver attribute)": [[3, "gillespy2.solvers.ODESolver.name", false]], "name (gillespy2.solvers.ssacsolver attribute)": [[3, "gillespy2.solvers.SSACSolver.name", false]], "name (gillespy2.solvers.tauhybridcsolver attribute)": [[3, "gillespy2.solvers.TauHybridCSolver.name", false]], "name (gillespy2.solvers.tauhybridsolver attribute)": [[3, "gillespy2.solvers.TauHybridSolver.name", false]], "name (gillespy2.solvers.tauleapingcsolver attribute)": [[3, "gillespy2.solvers.TauLeapingCSolver.name", false]], "name (gillespy2.solvers.tauleapingsolver attribute)": [[3, "gillespy2.solvers.TauLeapingSolver.name", false]], "ndarraycoder (class in gillespy2.core.jsonify)": [[1, "gillespy2.core.jsonify.NdArrayCoder", false]], "negative_state_at_begining_of_step (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.ErrorStatus.NEGATIVE_STATE_AT_BEGINING_OF_STEP", false]], "negative_state_at_begining_of_step (gillespy2.solvers.cpp.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.ErrorStatus.NEGATIVE_STATE_AT_BEGINING_OF_STEP", false]], "negative_state_at_begining_of_step (gillespy2.solvers.tauhybridcsolver.errorstatus attribute)": [[3, "gillespy2.solvers.TauHybridCSolver.ErrorStatus.NEGATIVE_STATE_AT_BEGINING_OF_STEP", false]], "negative_state_no_ssa_reaction (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.ErrorStatus.NEGATIVE_STATE_NO_SSA_REACTION", false]], "negative_state_no_ssa_reaction (gillespy2.solvers.cpp.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.ErrorStatus.NEGATIVE_STATE_NO_SSA_REACTION", false]], "negative_state_no_ssa_reaction (gillespy2.solvers.tauhybridcsolver.errorstatus attribute)": [[3, "gillespy2.solvers.TauHybridCSolver.ErrorStatus.NEGATIVE_STATE_NO_SSA_REACTION", false]], "new_child() (gillespy2.core.chainmap method)": [[1, "gillespy2.core.ChainMap.new_child", false]], "now() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.now", false]], "numpy_initialization() (in module gillespy2.solvers.utilities.solverutils)": [[10, "gillespy2.solvers.utilities.solverutils.numpy_initialization", false]], "numpy_resume() (in module gillespy2.solvers.utilities.solverutils)": [[10, "gillespy2.solvers.utilities.solverutils.numpy_resume", false]], "numpy_trajectory_base_initialization() (in module gillespy2.solvers.utilities.solverutils)": [[10, "gillespy2.solvers.utilities.solverutils.numpy_trajectory_base_initialization", false]], "numpyssasolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.NumPySSASolver", false]], "numpyssasolver (class in gillespy2.solvers.numpy)": [[8, "gillespy2.solvers.numpy.NumPySSASolver", false]], "numpyssasolver (class in gillespy2.solvers.numpy.ssa_solver)": [[8, "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver", false]], "obj_to_anon() (gillespy2.core.jsonify.translationtable method)": [[1, "gillespy2.core.jsonify.TranslationTable.obj_to_anon", false]], "obj_to_anon() (gillespy2.core.translationtable method)": [[1, "gillespy2.core.TranslationTable.obj_to_anon", false]], "obj_to_named() (gillespy2.core.jsonify.translationtable method)": [[1, "gillespy2.core.jsonify.TranslationTable.obj_to_named", false]], "obj_to_named() (gillespy2.core.translationtable method)": [[1, "gillespy2.core.TranslationTable.obj_to_named", false]], "odecsolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.ODECSolver", false]], "odecsolver (class in gillespy2.solvers.cpp)": [[5, "gillespy2.solvers.cpp.ODECSolver", false]], "odecsolver (class in gillespy2.solvers.cpp.ode_c_solver)": [[5, "gillespy2.solvers.cpp.ode_c_solver.ODECSolver", false]], "odesolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.ODESolver", false]], "odesolver (class in gillespy2.solvers.numpy)": [[8, "gillespy2.solvers.numpy.ODESolver", false]], "odesolver (class in gillespy2.solvers.numpy.ode_solver)": [[8, "gillespy2.solvers.numpy.ode_solver.ODESolver", false]], "operator_map (gillespy2.solvers.cpp.build.expression.expression attribute)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.operator_map", false]], "ordereddict (class in gillespy2.core)": [[1, "gillespy2.core.OrderedDict", false]], "parameter (class in gillespy2.core)": [[1, "gillespy2.core.Parameter", false]], "parameter (class in gillespy2.core.parameter)": [[1, "gillespy2.core.parameter.Parameter", false]], "parametererror": [[1, "gillespy2.core.ParameterError", false], [1, "gillespy2.core.gillespyError.ParameterError", false]], "parents (gillespy2.core.chainmap property)": [[1, "gillespy2.core.ChainMap.parents", false]], "parse_comparison() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.parse_comparison", false]], "parse_logical() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.parse_logical", false]], "parse_operator() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.parse_operator", false]], "pause (gillespy2.core.livegraphing.crepeattimer attribute)": [[1, "gillespy2.core.liveGraphing.CRepeatTimer.pause", false]], "pause (gillespy2.core.livegraphing.repeattimer attribute)": [[1, "gillespy2.core.liveGraphing.RepeatTimer.pause", false]], "pause_event (gillespy2.solvers.clesolver attribute)": [[3, "gillespy2.solvers.CLESolver.pause_event", false]], "pause_event (gillespy2.solvers.numpy.cle_solver.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLE_solver.CLESolver.pause_event", false]], "pause_event (gillespy2.solvers.numpy.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLESolver.pause_event", false]], "pause_event (gillespy2.solvers.numpy.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.NumPySSASolver.pause_event", false]], "pause_event (gillespy2.solvers.numpy.ode_solver.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ode_solver.ODESolver.pause_event", false]], "pause_event (gillespy2.solvers.numpy.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ODESolver.pause_event", false]], "pause_event (gillespy2.solvers.numpy.ssa_solver.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver.pause_event", false]], "pause_event (gillespy2.solvers.numpy.tau_leaping_solver.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver.pause_event", false]], "pause_event (gillespy2.solvers.numpy.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.TauLeapingSolver.pause_event", false]], "pause_event (gillespy2.solvers.numpyssasolver attribute)": [[3, "gillespy2.solvers.NumPySSASolver.pause_event", false]], "pause_event (gillespy2.solvers.odesolver attribute)": [[3, "gillespy2.solvers.ODESolver.pause_event", false]], "pause_event (gillespy2.solvers.tauleapingsolver attribute)": [[3, "gillespy2.solvers.TauLeapingSolver.pause_event", false]], "paused (gillespy2.solvers.cpp.c_solver.simulationreturncode attribute)": [[5, "gillespy2.solvers.cpp.c_solver.SimulationReturnCode.PAUSED", false]], "plot() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.plot", false]], "plot() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.plot", false]], "plot_mean_stdev() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.plot_mean_stdev", false]], "plot_mean_stdev() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.plot_mean_stdev", false]], "plot_std_dev_range() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.plot_std_dev_range", false]], "plot_std_dev_range() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.plot_std_dev_range", false]], "plotplotly() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.plotplotly", false]], "plotplotly() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.plotplotly", false]], "plotplotly_mean_stdev() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.plotplotly_mean_stdev", false]], "plotplotly_mean_stdev() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.plotplotly_mean_stdev", false]], "plotplotly_std_dev_range() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.plotplotly_std_dev_range", false]], "plotplotly_std_dev_range() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.plotplotly_std_dev_range", false]], "pop() (gillespy2.core.chainmap method)": [[1, "gillespy2.core.ChainMap.pop", false]], "pop() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.pop", false]], "pop() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.pop", false]], "popitem() (gillespy2.core.chainmap method)": [[1, "gillespy2.core.ChainMap.popitem", false]], "popitem() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.popitem", false]], "prebuild() (gillespy2.solvers.cpp.build.make.make method)": [[6, "gillespy2.solvers.cpp.build.make.Make.prebuild", false]], "prepare() (gillespy2.solvers.cpp.build.build_engine.buildengine method)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine.prepare", false]], "print_text_header() (gillespy2.core.livegraphing.livedisplayer method)": [[1, "gillespy2.core.liveGraphing.LiveDisplayer.print_text_header", false]], "problem_with_name() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.problem_with_name", false]], "problem_with_name() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.problem_with_name", false]], "public_vars() (gillespy2.core.jsonify method)": [[1, "gillespy2.core.Jsonify.public_vars", false]], "public_vars() (gillespy2.core.jsonify.jsonify method)": [[1, "gillespy2.core.jsonify.Jsonify.public_vars", false]], "pythonconverter (class in gillespy2.solvers.cpp.build.expression)": [[6, "gillespy2.solvers.cpp.build.expression.PythonConverter", false]], "raterule (class in gillespy2.core)": [[1, "gillespy2.core.RateRule", false]], "raterule (class in gillespy2.core.raterule)": [[1, "gillespy2.core.raterule.RateRule", false]], "rateruleerror": [[1, "gillespy2.core.RateRuleError", false], [1, "gillespy2.core.gillespyError.RateRuleError", false]], "rc (gillespy2.solvers.clesolver attribute)": [[3, "gillespy2.solvers.CLESolver.rc", false]], "rc (gillespy2.solvers.cpp.c_solver.csolver attribute)": [[5, "gillespy2.solvers.cpp.c_solver.CSolver.rc", false]], "rc (gillespy2.solvers.numpy.cle_solver.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLE_solver.CLESolver.rc", false]], "rc (gillespy2.solvers.numpy.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLESolver.rc", false]], "rc (gillespy2.solvers.numpy.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.NumPySSASolver.rc", false]], "rc (gillespy2.solvers.numpy.ode_solver.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ode_solver.ODESolver.rc", false]], "rc (gillespy2.solvers.numpy.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ODESolver.rc", false]], "rc (gillespy2.solvers.numpy.ssa_solver.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver.rc", false]], "rc (gillespy2.solvers.numpy.tau_hybrid_solver.tauhybridsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver.rc", false]], "rc (gillespy2.solvers.numpy.tau_leaping_solver.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver.rc", false]], "rc (gillespy2.solvers.numpy.tauhybridsolver attribute)": [[8, "gillespy2.solvers.numpy.TauHybridSolver.rc", false]], "rc (gillespy2.solvers.numpy.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.TauLeapingSolver.rc", false]], "rc (gillespy2.solvers.numpyssasolver attribute)": [[3, "gillespy2.solvers.NumPySSASolver.rc", false]], "rc (gillespy2.solvers.odesolver attribute)": [[3, "gillespy2.solvers.ODESolver.rc", false]], "rc (gillespy2.solvers.tauhybridsolver attribute)": [[3, "gillespy2.solvers.TauHybridSolver.rc", false]], "rc (gillespy2.solvers.tauleapingsolver attribute)": [[3, "gillespy2.solvers.TauLeapingSolver.rc", false]], "reaction (class in gillespy2.core)": [[1, "gillespy2.core.Reaction", false]], "reaction (class in gillespy2.core.reaction)": [[1, "gillespy2.core.reaction.Reaction", false]], "reactionerror": [[1, "gillespy2.core.ReactionError", false], [1, "gillespy2.core.gillespyError.ReactionError", false]], "read() (gillespy2.solvers.cpp.c_decoder.basicsimdecoder method)": [[5, "gillespy2.solvers.cpp.c_decoder.BasicSimDecoder.read", false]], "read() (gillespy2.solvers.cpp.c_decoder.iterativesimdecoder method)": [[5, "gillespy2.solvers.cpp.c_decoder.IterativeSimDecoder.read", false]], "read() (gillespy2.solvers.cpp.c_decoder.simdecoder method)": [[5, "gillespy2.solvers.cpp.c_decoder.SimDecoder.read", false]], "recursive_translate() (gillespy2.core.jsonify.translationtable method)": [[1, "gillespy2.core.jsonify.TranslationTable.recursive_translate", false]], "recursive_translate() (gillespy2.core.translationtable method)": [[1, "gillespy2.core.TranslationTable.recursive_translate", false]], "remove() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.remove", false]], "repeattimer (class in gillespy2.core.livegraphing)": [[1, "gillespy2.core.liveGraphing.RepeatTimer", false]], "replace() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.replace", false]], "reserved_names (gillespy2.core.model attribute)": [[1, "gillespy2.core.Model.reserved_names", false]], "reserved_names (gillespy2.core.model.model attribute)": [[1, "gillespy2.core.model.Model.reserved_names", false]], "reserved_names (gillespy2.solvers.cpp.build.template_gen.sanitizedmodel attribute)": [[6, "gillespy2.solvers.cpp.build.template_gen.SanitizedModel.reserved_names", false]], "resolution (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.resolution", false]], "result (gillespy2.solvers.clesolver attribute)": [[3, "gillespy2.solvers.CLESolver.result", false]], "result (gillespy2.solvers.numpy.cle_solver.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLE_solver.CLESolver.result", false]], "result (gillespy2.solvers.numpy.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLESolver.result", false]], "result (gillespy2.solvers.numpy.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.NumPySSASolver.result", false]], "result (gillespy2.solvers.numpy.ode_solver.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ode_solver.ODESolver.result", false]], "result (gillespy2.solvers.numpy.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ODESolver.result", false]], "result (gillespy2.solvers.numpy.ssa_solver.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver.result", false]], "result (gillespy2.solvers.numpy.tau_hybrid_solver.tauhybridsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver.result", false]], "result (gillespy2.solvers.numpy.tau_leaping_solver.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver.result", false]], "result (gillespy2.solvers.numpy.tauhybridsolver attribute)": [[8, "gillespy2.solvers.numpy.TauHybridSolver.result", false]], "result (gillespy2.solvers.numpy.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.TauLeapingSolver.result", false]], "result (gillespy2.solvers.numpyssasolver attribute)": [[3, "gillespy2.solvers.NumPySSASolver.result", false]], "result (gillespy2.solvers.odesolver attribute)": [[3, "gillespy2.solvers.ODESolver.result", false]], "result (gillespy2.solvers.tauhybridsolver attribute)": [[3, "gillespy2.solvers.TauHybridSolver.result", false]], "result (gillespy2.solvers.tauleapingsolver attribute)": [[3, "gillespy2.solvers.TauLeapingSolver.result", false]], "results (class in gillespy2.core)": [[1, "gillespy2.core.Results", false]], "results (class in gillespy2.core.results)": [[1, "gillespy2.core.results.Results", false]], "resultserror": [[1, "gillespy2.core.ResultsError", false], [1, "gillespy2.core.gillespyError.ResultsError", false]], "reverse() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.reverse", false]], "run() (gillespy2.core.gillespysolver method)": [[1, "gillespy2.core.GillesPySolver.run", false]], "run() (gillespy2.core.gillespysolver.gillespysolver method)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.run", false]], "run() (gillespy2.core.livegraphing.crepeattimer method)": [[1, "gillespy2.core.liveGraphing.CRepeatTimer.run", false]], "run() (gillespy2.core.livegraphing.repeattimer method)": [[1, "gillespy2.core.liveGraphing.RepeatTimer.run", false]], "run() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.run", false]], "run() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.run", false]], "run() (gillespy2.solvers.clesolver method)": [[3, "gillespy2.solvers.CLESolver.run", false]], "run() (gillespy2.solvers.cpp.ode_c_solver.odecsolver method)": [[5, "gillespy2.solvers.cpp.ode_c_solver.ODECSolver.run", false]], "run() (gillespy2.solvers.cpp.odecsolver method)": [[5, "gillespy2.solvers.cpp.ODECSolver.run", false]], "run() (gillespy2.solvers.cpp.ssa_c_solver.ssacsolver method)": [[5, "gillespy2.solvers.cpp.ssa_c_solver.SSACSolver.run", false]], "run() (gillespy2.solvers.cpp.ssacsolver method)": [[5, "gillespy2.solvers.cpp.SSACSolver.run", false]], "run() (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver method)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.run", false]], "run() (gillespy2.solvers.cpp.tau_leaping_c_solver.tauleapingcsolver method)": [[5, "gillespy2.solvers.cpp.tau_leaping_c_solver.TauLeapingCSolver.run", false]], "run() (gillespy2.solvers.cpp.tauhybridcsolver method)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.run", false]], "run() (gillespy2.solvers.cpp.tauleapingcsolver method)": [[5, "gillespy2.solvers.cpp.TauLeapingCSolver.run", false]], "run() (gillespy2.solvers.numpy.cle_solver.clesolver method)": [[8, "gillespy2.solvers.numpy.CLE_solver.CLESolver.run", false]], "run() (gillespy2.solvers.numpy.clesolver method)": [[8, "gillespy2.solvers.numpy.CLESolver.run", false]], "run() (gillespy2.solvers.numpy.numpyssasolver method)": [[8, "gillespy2.solvers.numpy.NumPySSASolver.run", false]], "run() (gillespy2.solvers.numpy.ode_solver.odesolver method)": [[8, "gillespy2.solvers.numpy.ode_solver.ODESolver.run", false]], "run() (gillespy2.solvers.numpy.odesolver method)": [[8, "gillespy2.solvers.numpy.ODESolver.run", false]], "run() (gillespy2.solvers.numpy.ssa_solver.numpyssasolver method)": [[8, "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver.run", false]], "run() (gillespy2.solvers.numpy.tau_hybrid_solver.tauhybridsolver method)": [[8, "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver.run", false]], "run() (gillespy2.solvers.numpy.tau_leaping_solver.tauleapingsolver method)": [[8, "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver.run", false]], "run() (gillespy2.solvers.numpy.tauhybridsolver method)": [[8, "gillespy2.solvers.numpy.TauHybridSolver.run", false]], "run() (gillespy2.solvers.numpy.tauleapingsolver method)": [[8, "gillespy2.solvers.numpy.TauLeapingSolver.run", false]], "run() (gillespy2.solvers.numpyssasolver method)": [[3, "gillespy2.solvers.NumPySSASolver.run", false]], "run() (gillespy2.solvers.odecsolver method)": [[3, "gillespy2.solvers.ODECSolver.run", false]], "run() (gillespy2.solvers.odesolver method)": [[3, "gillespy2.solvers.ODESolver.run", false]], "run() (gillespy2.solvers.ssacsolver method)": [[3, "gillespy2.solvers.SSACSolver.run", false]], "run() (gillespy2.solvers.tauhybridcsolver method)": [[3, "gillespy2.solvers.TauHybridCSolver.run", false]], "run() (gillespy2.solvers.tauhybridsolver method)": [[3, "gillespy2.solvers.TauHybridSolver.run", false]], "run() (gillespy2.solvers.tauleapingcsolver method)": [[3, "gillespy2.solvers.TauLeapingCSolver.run", false]], "run() (gillespy2.solvers.tauleapingsolver method)": [[3, "gillespy2.solvers.TauLeapingSolver.run", false]], "sanitized_expression() (gillespy2.core.events.eventtrigger method)": [[1, "gillespy2.core.events.EventTrigger.sanitized_expression", false]], "sanitized_expression() (gillespy2.core.eventtrigger method)": [[1, "gillespy2.core.EventTrigger.sanitized_expression", false]], "sanitized_expression() (gillespy2.core.parameter method)": [[1, "gillespy2.core.Parameter.sanitized_expression", false]], "sanitized_expression() (gillespy2.core.parameter.parameter method)": [[1, "gillespy2.core.parameter.Parameter.sanitized_expression", false]], "sanitized_formula() (gillespy2.core.assignmentrule method)": [[1, "gillespy2.core.AssignmentRule.sanitized_formula", false]], "sanitized_formula() (gillespy2.core.assignmentrule.assignmentrule method)": [[1, "gillespy2.core.assignmentrule.AssignmentRule.sanitized_formula", false]], "sanitized_formula() (gillespy2.core.raterule method)": [[1, "gillespy2.core.RateRule.sanitized_formula", false]], "sanitized_formula() (gillespy2.core.raterule.raterule method)": [[1, "gillespy2.core.raterule.RateRule.sanitized_formula", false]], "sanitized_function() (gillespy2.core.functiondefinition method)": [[1, "gillespy2.core.FunctionDefinition.sanitized_function", false]], "sanitized_function() (gillespy2.core.functiondefinition.functiondefinition method)": [[1, "gillespy2.core.functiondefinition.FunctionDefinition.sanitized_function", false]], "sanitized_parameter_names() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.sanitized_parameter_names", false]], "sanitized_parameter_names() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.sanitized_parameter_names", false]], "sanitized_propensity_function() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.sanitized_propensity_function", false]], "sanitized_propensity_function() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.sanitized_propensity_function", false]], "sanitized_species_names() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.sanitized_species_names", false]], "sanitized_species_names() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.sanitized_species_names", false]], "sanitizedmodel (class in gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.SanitizedModel", false]], "sbmlerror": [[1, "gillespy2.core.SBMLError", false], [1, "gillespy2.core.gillespyError.SBMLError", false]], "second (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.second", false]], "select() (in module gillespy2.solvers.utilities.tau)": [[10, "gillespy2.solvers.utilities.Tau.select", false]], "serialize() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.serialize", false]], "serialize() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.serialize", false]], "set_annotation() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.set_annotation", false]], "set_annotation() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.set_annotation", false]], "set_initial_value() (gillespy2.core.species method)": [[1, "gillespy2.core.Species.set_initial_value", false]], "set_initial_value() (gillespy2.core.species.species method)": [[1, "gillespy2.core.species.Species.set_initial_value", false]], "set_parameter() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.set_parameter", false]], "set_parameter() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.set_parameter", false]], "set_propensities() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.set_propensities", false]], "set_propensities() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.set_propensities", false]], "set_rate() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.set_rate", false]], "set_rate() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.set_rate", false]], "set_units() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.set_units", false]], "set_units() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.set_units", false]], "setcoder (class in gillespy2.core.jsonify)": [[1, "gillespy2.core.jsonify.SetCoder", false]], "setdefault() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.setdefault", false]], "settype() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.setType", false]], "settype() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.setType", false]], "simdecoder (class in gillespy2.solvers.cpp.c_decoder)": [[5, "gillespy2.solvers.cpp.c_decoder.SimDecoder", false]], "simulationerror": [[1, "gillespy2.core.SimulationError", false], [1, "gillespy2.core.gillespyError.SimulationError", false]], "simulationreturncode (class in gillespy2.solvers.cpp.c_solver)": [[5, "gillespy2.solvers.cpp.c_solver.SimulationReturnCode", false]], "simulationtimeouterror": [[1, "gillespy2.core.SimulationTimeoutError", false], [1, "gillespy2.core.gillespyError.SimulationTimeoutError", false]], "solvererror": [[1, "gillespy2.core.SolverError", false], [1, "gillespy2.core.gillespyError.SolverError", false]], "sort() (gillespy2.core.userlist method)": [[1, "gillespy2.core.UserList.sort", false]], "sortableobject (class in gillespy2.core)": [[1, "gillespy2.core.SortableObject", false]], "sortableobject (class in gillespy2.core.sortableobject)": [[1, "gillespy2.core.sortableobject.SortableObject", false]], "special_characters (gillespy2.core.model attribute)": [[1, "gillespy2.core.Model.special_characters", false]], "special_characters (gillespy2.core.model.model attribute)": [[1, "gillespy2.core.model.Model.special_characters", false]], "species (class in gillespy2.core)": [[1, "gillespy2.core.Species", false]], "species (class in gillespy2.core.species)": [[1, "gillespy2.core.species.Species", false]], "species_parse() (in module gillespy2.solvers.utilities.solverutils)": [[10, "gillespy2.solvers.utilities.solverutils.species_parse", false]], "specieserror": [[1, "gillespy2.core.SpeciesError", false], [1, "gillespy2.core.gillespyError.SpeciesError", false]], "ssacsolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.SSACSolver", false]], "ssacsolver (class in gillespy2.solvers.cpp)": [[5, "gillespy2.solvers.cpp.SSACSolver", false]], "ssacsolver (class in gillespy2.solvers.cpp.ssa_c_solver)": [[5, "gillespy2.solvers.cpp.ssa_c_solver.SSACSolver", false]], "stddev_ensemble() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.stddev_ensemble", false]], "stddev_ensemble() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.stddev_ensemble", false]], "stochmldocument (class in gillespy2.core)": [[1, "gillespy2.core.StochMLDocument", false]], "stochmldocument (class in gillespy2.core.model)": [[1, "gillespy2.core.model.StochMLDocument", false]], "stochmlimporterror": [[1, "gillespy2.core.StochMLImportError", false], [1, "gillespy2.core.gillespyError.StochMLImportError", false]], "stop_event (gillespy2.solvers.clesolver attribute)": [[3, "gillespy2.solvers.CLESolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.cle_solver.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLE_solver.CLESolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.clesolver attribute)": [[8, "gillespy2.solvers.numpy.CLESolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.NumPySSASolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.ode_solver.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ode_solver.ODESolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.odesolver attribute)": [[8, "gillespy2.solvers.numpy.ODESolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.ssa_solver.numpyssasolver attribute)": [[8, "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.tau_hybrid_solver.tauhybridsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.tau_leaping_solver.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.tauhybridsolver attribute)": [[8, "gillespy2.solvers.numpy.TauHybridSolver.stop_event", false]], "stop_event (gillespy2.solvers.numpy.tauleapingsolver attribute)": [[8, "gillespy2.solvers.numpy.TauLeapingSolver.stop_event", false]], "stop_event (gillespy2.solvers.numpyssasolver attribute)": [[3, "gillespy2.solvers.NumPySSASolver.stop_event", false]], "stop_event (gillespy2.solvers.odesolver attribute)": [[3, "gillespy2.solvers.ODESolver.stop_event", false]], "stop_event (gillespy2.solvers.tauhybridsolver attribute)": [[3, "gillespy2.solvers.TauHybridSolver.stop_event", false]], "stop_event (gillespy2.solvers.tauleapingsolver attribute)": [[3, "gillespy2.solvers.TauLeapingSolver.stop_event", false]], "strptime() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.strptime", false]], "target (gillespy2.solvers.cpp.ode_c_solver.odecsolver attribute)": [[5, "gillespy2.solvers.cpp.ode_c_solver.ODECSolver.target", false]], "target (gillespy2.solvers.cpp.odecsolver attribute)": [[5, "gillespy2.solvers.cpp.ODECSolver.target", false]], "target (gillespy2.solvers.cpp.ssa_c_solver.ssacsolver attribute)": [[5, "gillespy2.solvers.cpp.ssa_c_solver.SSACSolver.target", false]], "target (gillespy2.solvers.cpp.ssacsolver attribute)": [[5, "gillespy2.solvers.cpp.SSACSolver.target", false]], "target (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver attribute)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.target", false]], "target (gillespy2.solvers.cpp.tau_leaping_c_solver.tauleapingcsolver attribute)": [[5, "gillespy2.solvers.cpp.tau_leaping_c_solver.TauLeapingCSolver.target", false]], "target (gillespy2.solvers.cpp.tauhybridcsolver attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.target", false]], "target (gillespy2.solvers.cpp.tauleapingcsolver attribute)": [[5, "gillespy2.solvers.cpp.TauLeapingCSolver.target", false]], "target (gillespy2.solvers.odecsolver attribute)": [[3, "gillespy2.solvers.ODECSolver.target", false]], "target (gillespy2.solvers.ssacsolver attribute)": [[3, "gillespy2.solvers.SSACSolver.target", false]], "target (gillespy2.solvers.tauhybridcsolver attribute)": [[3, "gillespy2.solvers.TauHybridCSolver.target", false]], "target (gillespy2.solvers.tauleapingcsolver attribute)": [[3, "gillespy2.solvers.TauLeapingCSolver.target", false]], "tauhybridcsolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.TauHybridCSolver", false]], "tauhybridcsolver (class in gillespy2.solvers.cpp)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver", false]], "tauhybridcsolver (class in gillespy2.solvers.cpp.tau_hybrid_c_solver)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver", false]], "tauhybridcsolver.errorstatus (class in gillespy2.solvers)": [[3, "gillespy2.solvers.TauHybridCSolver.ErrorStatus", false]], "tauhybridcsolver.errorstatus (class in gillespy2.solvers.cpp)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.ErrorStatus", false]], "tauhybridcsolver.errorstatus (class in gillespy2.solvers.cpp.tau_hybrid_c_solver)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.ErrorStatus", false]], "tauhybridsolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.TauHybridSolver", false]], "tauhybridsolver (class in gillespy2.solvers.numpy)": [[8, "gillespy2.solvers.numpy.TauHybridSolver", false]], "tauhybridsolver (class in gillespy2.solvers.numpy.tau_hybrid_solver)": [[8, "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver", false]], "tauleapingcsolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.TauLeapingCSolver", false]], "tauleapingcsolver (class in gillespy2.solvers.cpp)": [[5, "gillespy2.solvers.cpp.TauLeapingCSolver", false]], "tauleapingcsolver (class in gillespy2.solvers.cpp.tau_leaping_c_solver)": [[5, "gillespy2.solvers.cpp.tau_leaping_c_solver.TauLeapingCSolver", false]], "tauleapingsolver (class in gillespy2.solvers)": [[3, "gillespy2.solvers.TauLeapingSolver", false]], "tauleapingsolver (class in gillespy2.solvers.numpy)": [[8, "gillespy2.solvers.numpy.TauLeapingSolver", false]], "tauleapingsolver (class in gillespy2.solvers.numpy.tau_leaping_solver)": [[8, "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver", false]], "template_def_propensities() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.template_def_propensities", false]], "template_def_rate_rules() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.template_def_rate_rules", false]], "template_def_reactions() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.template_def_reactions", false]], "template_def_species() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.template_def_species", false]], "template_def_variables() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.template_def_variables", false]], "template_definitions_name (gillespy2.solvers.cpp.build.build_engine.buildengine attribute)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine.template_definitions_name", false]], "template_options_name (gillespy2.solvers.cpp.build.build_engine.buildengine attribute)": [[6, "gillespy2.solvers.cpp.build.build_engine.BuildEngine.template_options_name", false]], "time() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.time", false]], "timespan (class in gillespy2.core)": [[1, "gillespy2.core.TimeSpan", false]], "timespan (class in gillespy2.core.timespan)": [[1, "gillespy2.core.timespan.TimeSpan", false]], "timespan() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.timespan", false]], "timespan() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.timespan", false]], "timespanerror": [[1, "gillespy2.core.TimespanError", false], [1, "gillespy2.core.gillespyError.TimespanError", false]], "timestamp() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.timestamp", false]], "timetuple() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.timetuple", false]], "timetz() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.timetz", false]], "to_anon() (gillespy2.core.jsonify method)": [[1, "gillespy2.core.Jsonify.to_anon", false]], "to_anon() (gillespy2.core.jsonify.jsonify method)": [[1, "gillespy2.core.jsonify.Jsonify.to_anon", false]], "to_array() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.to_array", false]], "to_array() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.to_array", false]], "to_csv() (gillespy2.core.results method)": [[1, "gillespy2.core.Results.to_csv", false]], "to_csv() (gillespy2.core.results.results method)": [[1, "gillespy2.core.results.Results.to_csv", false]], "to_dict() (gillespy2.core.jsonify method)": [[1, "gillespy2.core.Jsonify.to_dict", false]], "to_dict() (gillespy2.core.jsonify.int64coder static method)": [[1, "gillespy2.core.jsonify.Int64Coder.to_dict", false]], "to_dict() (gillespy2.core.jsonify.jsonify method)": [[1, "gillespy2.core.jsonify.Jsonify.to_dict", false]], "to_dict() (gillespy2.core.jsonify.ndarraycoder static method)": [[1, "gillespy2.core.jsonify.NdArrayCoder.to_dict", false]], "to_dict() (gillespy2.core.jsonify.setcoder static method)": [[1, "gillespy2.core.jsonify.SetCoder.to_dict", false]], "to_dict() (gillespy2.core.jsonify.typecoder static method)": [[1, "gillespy2.core.jsonify.TypeCoder.to_dict", false]], "to_dict() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.to_dict", false]], "to_dict() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.to_dict", false]], "to_json() (gillespy2.core.jsonify method)": [[1, "gillespy2.core.Jsonify.to_json", false]], "to_json() (gillespy2.core.jsonify.jsonify method)": [[1, "gillespy2.core.jsonify.Jsonify.to_json", false]], "to_model() (gillespy2.core.model.stochmldocument method)": [[1, "gillespy2.core.model.StochMLDocument.to_model", false]], "to_model() (gillespy2.core.stochmldocument method)": [[1, "gillespy2.core.StochMLDocument.to_model", false]], "to_named() (gillespy2.core.jsonify method)": [[1, "gillespy2.core.Jsonify.to_named", false]], "to_named() (gillespy2.core.jsonify.jsonify method)": [[1, "gillespy2.core.jsonify.Jsonify.to_named", false]], "to_string() (gillespy2.core.model.stochmldocument method)": [[1, "gillespy2.core.model.StochMLDocument.to_string", false]], "to_string() (gillespy2.core.stochmldocument method)": [[1, "gillespy2.core.StochMLDocument.to_string", false]], "trajectory (class in gillespy2.core)": [[1, "gillespy2.core.Trajectory", false]], "trajectory (class in gillespy2.core.results)": [[1, "gillespy2.core.results.Trajectory", false]], "trajectory_header() (gillespy2.core.livegraphing.livedisplayer method)": [[1, "gillespy2.core.liveGraphing.LiveDisplayer.trajectory_header", false]], "translationtable (class in gillespy2.core)": [[1, "gillespy2.core.TranslationTable", false]], "translationtable (class in gillespy2.core.jsonify)": [[1, "gillespy2.core.jsonify.TranslationTable", false]], "typecoder (class in gillespy2.core.jsonify)": [[1, "gillespy2.core.jsonify.TypeCoder", false]], "tzinfo (gillespy2.core.datetime attribute)": [[1, "gillespy2.core.datetime.tzinfo", false]], "tzname() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.tzname", false]], "unknown (gillespy2.solvers.cpp.tau_hybrid_c_solver.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.ErrorStatus.UNKNOWN", false]], "unknown (gillespy2.solvers.cpp.tauhybridcsolver.errorstatus attribute)": [[5, "gillespy2.solvers.cpp.TauHybridCSolver.ErrorStatus.UNKNOWN", false]], "unknown (gillespy2.solvers.tauhybridcsolver.errorstatus attribute)": [[3, "gillespy2.solvers.TauHybridCSolver.ErrorStatus.UNKNOWN", false]], "update() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.update", false]], "update_model_options() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.update_model_options", false]], "update_namespace() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.update_namespace", false]], "update_namespace() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.update_namespace", false]], "update_species_init_values() (in module gillespy2.solvers.utilities.solverutils)": [[10, "gillespy2.solvers.utilities.solverutils.update_species_init_values", false]], "use_propensity() (gillespy2.solvers.cpp.build.template_gen.sanitizedmodel method)": [[6, "gillespy2.solvers.cpp.build.template_gen.SanitizedModel.use_propensity", false]], "use_rate_rule() (gillespy2.solvers.cpp.build.template_gen.sanitizedmodel method)": [[6, "gillespy2.solvers.cpp.build.template_gen.SanitizedModel.use_rate_rule", false]], "use_reaction() (gillespy2.solvers.cpp.build.template_gen.sanitizedmodel method)": [[6, "gillespy2.solvers.cpp.build.template_gen.SanitizedModel.use_reaction", false]], "userdict (class in gillespy2.core)": [[1, "gillespy2.core.UserDict", false]], "userlist (class in gillespy2.core)": [[1, "gillespy2.core.UserList", false]], "utcfromtimestamp() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.utcfromtimestamp", false]], "utcnow() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.utcnow", false]], "utcoffset() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.utcoffset", false]], "utctimetuple() (gillespy2.core.datetime method)": [[1, "gillespy2.core.datetime.utctimetuple", false]], "valid_graph_params() (in module gillespy2.core.livegraphing)": [[1, "gillespy2.core.liveGraphing.valid_graph_params", false]], "validate() (gillespy2.core.parameter method)": [[1, "gillespy2.core.Parameter.validate", false]], "validate() (gillespy2.core.parameter.parameter method)": [[1, "gillespy2.core.parameter.Parameter.validate", false]], "validate() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.validate", false]], "validate() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.validate", false]], "validate() (gillespy2.core.species method)": [[1, "gillespy2.core.Species.validate", false]], "validate() (gillespy2.core.species.species method)": [[1, "gillespy2.core.species.Species.validate", false]], "validate() (gillespy2.core.timespan method)": [[1, "gillespy2.core.TimeSpan.validate", false]], "validate() (gillespy2.core.timespan.timespan method)": [[1, "gillespy2.core.timespan.TimeSpan.validate", false]], "validate() (gillespy2.solvers.cpp.build.expression.expression method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.validate", false]], "validate_integrator_options() (gillespy2.core.gillespysolver class method)": [[1, "gillespy2.core.GillesPySolver.validate_integrator_options", false]], "validate_integrator_options() (gillespy2.core.gillespysolver.gillespysolver class method)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.validate_integrator_options", false]], "validate_model() (gillespy2.core.gillespysolver class method)": [[1, "gillespy2.core.GillesPySolver.validate_model", false]], "validate_model() (gillespy2.core.gillespysolver.gillespysolver class method)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.validate_model", false]], "validate_reactants_and_products() (gillespy2.core.model method)": [[1, "gillespy2.core.Model.validate_reactants_and_products", false]], "validate_reactants_and_products() (gillespy2.core.model.model method)": [[1, "gillespy2.core.model.Model.validate_reactants_and_products", false]], "validate_sbml_features() (gillespy2.core.gillespysolver class method)": [[1, "gillespy2.core.GillesPySolver.validate_sbml_features", false]], "validate_sbml_features() (gillespy2.core.gillespysolver.gillespysolver class method)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.validate_sbml_features", false]], "validate_tspan() (gillespy2.core.gillespysolver method)": [[1, "gillespy2.core.GillesPySolver.validate_tspan", false]], "validate_tspan() (gillespy2.core.gillespysolver.gillespysolver method)": [[1, "gillespy2.core.gillespySolver.GillesPySolver.validate_tspan", false]], "validationerror": [[1, "gillespy2.core.ValidationError", false], [1, "gillespy2.core.gillespyError.ValidationError", false]], "values() (gillespy2.core.ordereddict method)": [[1, "gillespy2.core.OrderedDict.values", false]], "verify() (gillespy2.core.reaction method)": [[1, "gillespy2.core.Reaction.verify", false]], "verify() (gillespy2.core.reaction.reaction method)": [[1, "gillespy2.core.reaction.Reaction.verify", false]], "visit_add() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Add", false]], "visit_and() (gillespy2.solvers.cpp.build.expression.cppconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.CppConverter.visit_And", false]], "visit_and() (gillespy2.solvers.cpp.build.expression.pythonconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.PythonConverter.visit_And", false]], "visit_assign() (gillespy2.solvers.cpp.build.expression.expression.validationvisitor method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor.visit_Assign", false]], "visit_binop() (gillespy2.solvers.cpp.build.expression.cppconverter.cppexpressiontransformer method)": [[6, "gillespy2.solvers.cpp.build.expression.CppConverter.CppExpressionTransformer.visit_BinOp", false]], "visit_binop() (gillespy2.solvers.cpp.build.expression.expression.validationvisitor method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor.visit_BinOp", false]], "visit_binop() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_BinOp", false]], "visit_boolop() (gillespy2.solvers.cpp.build.expression.expression.validationvisitor method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor.visit_BoolOp", false]], "visit_boolop() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_BoolOp", false]], "visit_bytes() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Bytes", false]], "visit_call() (gillespy2.solvers.cpp.build.expression.expression.validationvisitor method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor.visit_Call", false]], "visit_call() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Call", false]], "visit_compare() (gillespy2.solvers.cpp.build.expression.expression.validationvisitor method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor.visit_Compare", false]], "visit_compare() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Compare", false]], "visit_constant() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Constant", false]], "visit_div() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Div", false]], "visit_ellipsis() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Ellipsis", false]], "visit_eq() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Eq", false]], "visit_gt() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Gt", false]], "visit_gte() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_GtE", false]], "visit_lt() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Lt", false]], "visit_lte() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_LtE", false]], "visit_mult() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Mult", false]], "visit_name() (gillespy2.solvers.cpp.build.expression.expression.validationvisitor method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor.visit_Name", false]], "visit_name() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Name", false]], "visit_nameconstant() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_NameConstant", false]], "visit_noteq() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_NotEq", false]], "visit_num() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Num", false]], "visit_or() (gillespy2.solvers.cpp.build.expression.cppconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.CppConverter.visit_Or", false]], "visit_or() (gillespy2.solvers.cpp.build.expression.pythonconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.PythonConverter.visit_Or", false]], "visit_pow() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Pow", false]], "visit_str() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Str", false]], "visit_sub() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_Sub", false]], "visit_unaryop() (gillespy2.solvers.cpp.build.expression.expression.validationvisitor method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor.visit_UnaryOp", false]], "visit_unaryop() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_UnaryOp", false]], "visit_usub() (gillespy2.solvers.cpp.build.expression.expressionconverter method)": [[6, "gillespy2.solvers.cpp.build.expression.ExpressionConverter.visit_USub", false]], "with_blacklist() (gillespy2.solvers.cpp.build.expression.expression method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.with_blacklist", false]], "with_callback() (gillespy2.solvers.cpp.c_decoder.iterativesimdecoder method)": [[5, "gillespy2.solvers.cpp.c_decoder.IterativeSimDecoder.with_callback", false]], "with_namespace() (gillespy2.solvers.cpp.build.expression.expression method)": [[6, "gillespy2.solvers.cpp.build.expression.Expression.with_namespace", false]], "write_definitions() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.write_definitions", false]], "write_template() (in module gillespy2.solvers.cpp.build.template_gen)": [[6, "gillespy2.solvers.cpp.build.template_gen.write_template", false]]}, "objects": {"": [[0, 0, 0, "-", "gillespy2"]], "gillespy2": [[1, 0, 0, "-", "core"], [2, 0, 0, "-", "sbml"], [3, 0, 0, "-", "solvers"], [11, 0, 0, "-", "stochss"]], "gillespy2.core": [[1, 1, 1, "", "AssignmentRule"], [1, 3, 1, "", "AssignmentRuleError"], [1, 3, 1, "", "BuildError"], [1, 1, 1, "", "ChainMap"], [1, 3, 1, "", "DirectoryError"], [1, 1, 1, "", "Event"], [1, 1, 1, "", "EventAssignment"], [1, 3, 1, "", "EventError"], [1, 1, 1, "", "EventTrigger"], [1, 3, 1, "", "ExecutionError"], [1, 1, 1, "", "FunctionDefinition"], [1, 3, 1, "", "FunctionDefinitionError"], [1, 1, 1, "", "GillesPySolver"], [1, 3, 1, "", "InvalidModelError"], [1, 3, 1, "", "InvalidStochMLError"], [1, 1, 1, "", "Jsonify"], [1, 1, 1, "", "Model"], [1, 3, 1, "", "ModelError"], [1, 1, 1, "", "OrderedDict"], [1, 1, 1, "", "Parameter"], [1, 3, 1, "", "ParameterError"], [1, 1, 1, "", "RateRule"], [1, 3, 1, "", "RateRuleError"], [1, 1, 1, "", "Reaction"], [1, 3, 1, "", "ReactionError"], [1, 1, 1, "", "Results"], [1, 3, 1, "", "ResultsError"], [1, 3, 1, "", "SBMLError"], [1, 3, 1, "", "SimulationError"], [1, 3, 1, "", "SimulationTimeoutError"], [1, 3, 1, "", "SolverError"], [1, 1, 1, "", "SortableObject"], [1, 1, 1, "", "Species"], [1, 3, 1, "", "SpeciesError"], [1, 1, 1, "", "StochMLDocument"], [1, 3, 1, "", "StochMLImportError"], [1, 1, 1, "", "TimeSpan"], [1, 3, 1, "", "TimespanError"], [1, 1, 1, "", "Trajectory"], [1, 1, 1, "", "TranslationTable"], [1, 1, 1, "", "UserDict"], [1, 1, 1, "", "UserList"], [1, 3, 1, "", "ValidationError"], [1, 0, 0, "-", "assignmentrule"], [1, 0, 0, "-", "cleanup"], [1, 6, 1, "", "cleanup_tempfiles"], [1, 6, 1, "", "common_rgb_values"], [1, 1, 1, "", "datetime"], [1, 0, 0, "-", "events"], [1, 6, 1, "", "export_SBML"], [1, 6, 1, "", "export_StochSS"], [1, 0, 0, "-", "functiondefinition"], [1, 0, 0, "-", "gillespyError"], [1, 0, 0, "-", "gillespySolver"], [1, 6, 1, "", "import_SBML"], [1, 0, 0, "-", "jsonify"], [1, 0, 0, "-", "liveGraphing"], [1, 0, 0, "-", "model"], [1, 0, 0, "-", "parameter"], [1, 0, 0, "-", "raterule"], [1, 0, 0, "-", "reaction"], [1, 0, 0, "-", "results"], [1, 0, 0, "-", "sortableobject"], [1, 0, 0, "-", "species"], [1, 0, 0, "-", "timespan"]], "gillespy2.core.AssignmentRule": [[1, 2, 1, "", "sanitized_formula"]], "gillespy2.core.ChainMap": [[1, 2, 1, "", "clear"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "fromkeys"], [1, 2, 1, "", "get"], [1, 2, 1, "", "new_child"], [1, 4, 1, "", "parents"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "popitem"]], "gillespy2.core.Event": [[1, 2, 1, "", "add_assignment"]], "gillespy2.core.EventTrigger": [[1, 2, 1, "", "sanitized_expression"]], "gillespy2.core.FunctionDefinition": [[1, 2, 1, "", "get_arg_string"], [1, 2, 1, "", "sanitized_function"]], "gillespy2.core.GillesPySolver": [[1, 2, 1, "", "get_solver_settings"], [1, 2, 1, "", "get_supported_features"], [1, 2, 1, "", "get_supported_integrator_options"], [1, 5, 1, "", "name"], [1, 2, 1, "", "run"], [1, 2, 1, "", "validate_integrator_options"], [1, 2, 1, "", "validate_model"], [1, 2, 1, "", "validate_sbml_features"], [1, 2, 1, "", "validate_tspan"]], "gillespy2.core.Jsonify": [[1, 2, 1, "", "from_dict"], [1, 2, 1, "", "from_json"], [1, 2, 1, "", "get_json_hash"], [1, 2, 1, "", "get_translation_table"], [1, 2, 1, "", "make_translation_table"], [1, 2, 1, "", "public_vars"], [1, 2, 1, "", "to_anon"], [1, 2, 1, "", "to_dict"], [1, 2, 1, "", "to_json"], [1, 2, 1, "", "to_named"]], "gillespy2.core.Model": [[1, 2, 1, "", "add"], [1, 2, 1, "", "add_assignment_rule"], [1, 2, 1, "", "add_event"], [1, 2, 1, "", "add_function_definition"], [1, 2, 1, "", "add_parameter"], [1, 2, 1, "", "add_rate_rule"], [1, 2, 1, "", "add_reaction"], [1, 2, 1, "", "add_species"], [1, 2, 1, "", "compile_prep"], [1, 2, 1, "", "delete_all_assignment_rules"], [1, 2, 1, "", "delete_all_events"], [1, 2, 1, "", "delete_all_function_definitions"], [1, 2, 1, "", "delete_all_parameters"], [1, 2, 1, "", "delete_all_rate_rules"], [1, 2, 1, "", "delete_all_reactions"], [1, 2, 1, "", "delete_all_species"], [1, 2, 1, "", "delete_assignment_rule"], [1, 2, 1, "", "delete_event"], [1, 2, 1, "", "delete_function_definition"], [1, 2, 1, "", "delete_parameter"], [1, 2, 1, "", "delete_rate_rule"], [1, 2, 1, "", "delete_reaction"], [1, 2, 1, "", "delete_species"], [1, 2, 1, "", "get_all_assignment_rules"], [1, 2, 1, "", "get_all_events"], [1, 2, 1, "", "get_all_function_definitions"], [1, 2, 1, "", "get_all_parameters"], [1, 2, 1, "", "get_all_rate_rules"], [1, 2, 1, "", "get_all_reactions"], [1, 2, 1, "", "get_all_species"], [1, 2, 1, "", "get_assignment_rule"], [1, 2, 1, "", "get_best_solver"], [1, 2, 1, "", "get_best_solver_algo"], [1, 2, 1, "", "get_element"], [1, 2, 1, "", "get_event"], [1, 2, 1, "", "get_function_definition"], [1, 2, 1, "", "get_model_features"], [1, 2, 1, "", "get_parameter"], [1, 2, 1, "", "get_rate_rule"], [1, 2, 1, "", "get_reaction"], [1, 2, 1, "", "get_species"], [1, 2, 1, "", "make_translation_table"], [1, 2, 1, "", "problem_with_name"], [1, 5, 1, "", "reserved_names"], [1, 2, 1, "", "run"], [1, 2, 1, "", "sanitized_parameter_names"], [1, 2, 1, "", "sanitized_species_names"], [1, 2, 1, "", "serialize"], [1, 2, 1, "", "set_parameter"], [1, 2, 1, "", "set_units"], [1, 5, 1, "", "special_characters"], [1, 2, 1, "", "timespan"], [1, 2, 1, "", "update_namespace"], [1, 2, 1, "", "validate_reactants_and_products"]], "gillespy2.core.OrderedDict": [[1, 2, 1, "", "clear"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "fromkeys"], [1, 2, 1, "", "items"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "move_to_end"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "popitem"], [1, 2, 1, "", "setdefault"], [1, 2, 1, "", "update"], [1, 2, 1, "", "values"]], "gillespy2.core.Parameter": [[1, 2, 1, "", "sanitized_expression"], [1, 2, 1, "", "validate"]], "gillespy2.core.RateRule": [[1, 2, 1, "", "sanitized_formula"]], "gillespy2.core.Reaction": [[1, 2, 1, "", "Annotate"], [1, 2, 1, "", "addProduct"], [1, 2, 1, "", "addReactant"], [1, 2, 1, "", "add_product"], [1, 2, 1, "", "add_reactant"], [1, 2, 1, "", "create_mass_action"], [1, 2, 1, "", "from_json"], [1, 2, 1, "", "sanitized_propensity_function"], [1, 2, 1, "", "setType"], [1, 2, 1, "", "set_annotation"], [1, 2, 1, "", "set_propensities"], [1, 2, 1, "", "set_rate"], [1, 2, 1, "", "to_dict"], [1, 2, 1, "", "validate"], [1, 2, 1, "", "verify"]], "gillespy2.core.Results": [[1, 2, 1, "", "average_ensemble"], [1, 2, 1, "", "build_from_solver_results"], [1, 2, 1, "", "plot"], [1, 2, 1, "", "plot_mean_stdev"], [1, 2, 1, "", "plot_std_dev_range"], [1, 2, 1, "", "plotplotly"], [1, 2, 1, "", "plotplotly_mean_stdev"], [1, 2, 1, "", "plotplotly_std_dev_range"], [1, 2, 1, "", "stddev_ensemble"], [1, 2, 1, "", "to_array"], [1, 2, 1, "", "to_csv"]], "gillespy2.core.Species": [[1, 2, 1, "", "set_initial_value"], [1, 2, 1, "", "validate"]], "gillespy2.core.StochMLDocument": [[1, 2, 1, "", "from_file"], [1, 2, 1, "", "from_model"], [1, 2, 1, "", "from_string"], [1, 2, 1, "", "to_model"], [1, 2, 1, "", "to_string"]], "gillespy2.core.TimeSpan": [[1, 2, 1, "", "arange"], [1, 2, 1, "", "linspace"], [1, 2, 1, "", "validate"]], "gillespy2.core.TranslationTable": [[1, 2, 1, "", "obj_to_anon"], [1, 2, 1, "", "obj_to_named"], [1, 2, 1, "", "recursive_translate"]], "gillespy2.core.UserDict": [[1, 2, 1, "", "copy"], [1, 2, 1, "", "fromkeys"], [1, 2, 1, "", "get"]], "gillespy2.core.UserList": [[1, 2, 1, "", "append"], [1, 2, 1, "", "clear"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "count"], [1, 2, 1, "", "extend"], [1, 2, 1, "", "index"], [1, 2, 1, "", "insert"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "remove"], [1, 2, 1, "", "reverse"], [1, 2, 1, "", "sort"]], "gillespy2.core.assignmentrule": [[1, 1, 1, "", "AssignmentRule"]], "gillespy2.core.assignmentrule.AssignmentRule": [[1, 2, 1, "", "sanitized_formula"]], "gillespy2.core.cleanup": [[1, 6, 1, "", "cleanup_tempfiles"]], "gillespy2.core.datetime": [[1, 2, 1, "", "astimezone"], [1, 2, 1, "", "combine"], [1, 2, 1, "", "ctime"], [1, 2, 1, "", "date"], [1, 2, 1, "", "dst"], [1, 5, 1, "", "fold"], [1, 2, 1, "", "fromisoformat"], [1, 2, 1, "", "fromtimestamp"], [1, 5, 1, "", "hour"], [1, 2, 1, "", "isoformat"], [1, 5, 1, "", "max"], [1, 5, 1, "", "microsecond"], [1, 5, 1, "", "min"], [1, 5, 1, "", "minute"], [1, 2, 1, "", "now"], [1, 2, 1, "", "replace"], [1, 5, 1, "", "resolution"], [1, 5, 1, "", "second"], [1, 2, 1, "", "strptime"], [1, 2, 1, "", "time"], [1, 2, 1, "", "timestamp"], [1, 2, 1, "", "timetuple"], [1, 2, 1, "", "timetz"], [1, 5, 1, "", "tzinfo"], [1, 2, 1, "", "tzname"], [1, 2, 1, "", "utcfromtimestamp"], [1, 2, 1, "", "utcnow"], [1, 2, 1, "", "utcoffset"], [1, 2, 1, "", "utctimetuple"]], "gillespy2.core.events": [[1, 1, 1, "", "Event"], [1, 1, 1, "", "EventAssignment"], [1, 1, 1, "", "EventTrigger"]], "gillespy2.core.events.Event": [[1, 2, 1, "", "add_assignment"]], "gillespy2.core.events.EventTrigger": [[1, 2, 1, "", "sanitized_expression"]], "gillespy2.core.functiondefinition": [[1, 1, 1, "", "FunctionDefinition"]], "gillespy2.core.functiondefinition.FunctionDefinition": [[1, 2, 1, "", "get_arg_string"], [1, 2, 1, "", "sanitized_function"]], "gillespy2.core.gillespyError": [[1, 3, 1, "", "AssignmentRuleError"], [1, 3, 1, "", "BuildError"], [1, 3, 1, "", "DirectoryError"], [1, 3, 1, "", "EventError"], [1, 3, 1, "", "ExecutionError"], [1, 3, 1, "", "FunctionDefinitionError"], [1, 3, 1, "", "InvalidModelError"], [1, 3, 1, "", "InvalidStochMLError"], [1, 3, 1, "", "ModelError"], [1, 3, 1, "", "ParameterError"], [1, 3, 1, "", "RateRuleError"], [1, 3, 1, "", "ReactionError"], [1, 3, 1, "", "ResultsError"], [1, 3, 1, "", "SBMLError"], [1, 3, 1, "", "SimulationError"], [1, 3, 1, "", "SimulationTimeoutError"], [1, 3, 1, "", "SolverError"], [1, 3, 1, "", "SpeciesError"], [1, 3, 1, "", "StochMLImportError"], [1, 3, 1, "", "TimespanError"], [1, 3, 1, "", "ValidationError"]], "gillespy2.core.gillespySolver": [[1, 1, 1, "", "GillesPySolver"]], "gillespy2.core.gillespySolver.GillesPySolver": [[1, 2, 1, "", "get_solver_settings"], [1, 2, 1, "", "get_supported_features"], [1, 2, 1, "", "get_supported_integrator_options"], [1, 5, 1, "", "name"], [1, 2, 1, "", "run"], [1, 2, 1, "", "validate_integrator_options"], [1, 2, 1, "", "validate_model"], [1, 2, 1, "", "validate_sbml_features"], [1, 2, 1, "", "validate_tspan"]], "gillespy2.core.jsonify": [[1, 1, 1, "", "ComplexJsonCoder"], [1, 1, 1, "", "Int64Coder"], [1, 1, 1, "", "Jsonify"], [1, 1, 1, "", "NdArrayCoder"], [1, 1, 1, "", "SetCoder"], [1, 1, 1, "", "TranslationTable"], [1, 1, 1, "", "TypeCoder"]], "gillespy2.core.jsonify.ComplexJsonCoder": [[1, 2, 1, "", "decode"], [1, 2, 1, "", "default"]], "gillespy2.core.jsonify.Int64Coder": [[1, 2, 1, "", "from_json"], [1, 2, 1, "", "to_dict"]], "gillespy2.core.jsonify.Jsonify": [[1, 2, 1, "", "from_dict"], [1, 2, 1, "", "from_json"], [1, 2, 1, "", "get_json_hash"], [1, 2, 1, "", "get_translation_table"], [1, 2, 1, "", "make_translation_table"], [1, 2, 1, "", "public_vars"], [1, 2, 1, "", "to_anon"], [1, 2, 1, "", "to_dict"], [1, 2, 1, "", "to_json"], [1, 2, 1, "", "to_named"]], "gillespy2.core.jsonify.NdArrayCoder": [[1, 2, 1, "", "from_json"], [1, 2, 1, "", "to_dict"]], "gillespy2.core.jsonify.SetCoder": [[1, 2, 1, "", "from_json"], [1, 2, 1, "", "to_dict"]], "gillespy2.core.jsonify.TranslationTable": [[1, 2, 1, "", "obj_to_anon"], [1, 2, 1, "", "obj_to_named"], [1, 2, 1, "", "recursive_translate"]], "gillespy2.core.jsonify.TypeCoder": [[1, 2, 1, "", "from_json"], [1, 2, 1, "", "to_dict"]], "gillespy2.core.liveGraphing": [[1, 1, 1, "", "CRepeatTimer"], [1, 1, 1, "", "LiveDisplayer"], [1, 1, 1, "", "RepeatTimer"], [1, 6, 1, "", "display_types"], [1, 6, 1, "", "valid_graph_params"]], "gillespy2.core.liveGraphing.CRepeatTimer": [[1, 5, 1, "", "pause"], [1, 2, 1, "", "run"]], "gillespy2.core.liveGraphing.LiveDisplayer": [[1, 2, 1, "", "display"], [1, 2, 1, "", "increment_trajectory"], [1, 2, 1, "", "print_text_header"], [1, 2, 1, "", "trajectory_header"]], "gillespy2.core.liveGraphing.RepeatTimer": [[1, 5, 1, "", "pause"], [1, 2, 1, "", "run"]], "gillespy2.core.model": [[1, 1, 1, "", "Model"], [1, 1, 1, "", "StochMLDocument"], [1, 6, 1, "", "export_SBML"], [1, 6, 1, "", "export_StochSS"], [1, 6, 1, "", "import_SBML"]], "gillespy2.core.model.Model": [[1, 2, 1, "", "add"], [1, 2, 1, "", "add_assignment_rule"], [1, 2, 1, "", "add_event"], [1, 2, 1, "", "add_function_definition"], [1, 2, 1, "", "add_parameter"], [1, 2, 1, "", "add_rate_rule"], [1, 2, 1, "", "add_reaction"], [1, 2, 1, "", "add_species"], [1, 2, 1, "", "compile_prep"], [1, 2, 1, "", "delete_all_assignment_rules"], [1, 2, 1, "", "delete_all_events"], [1, 2, 1, "", "delete_all_function_definitions"], [1, 2, 1, "", "delete_all_parameters"], [1, 2, 1, "", "delete_all_rate_rules"], [1, 2, 1, "", "delete_all_reactions"], [1, 2, 1, "", "delete_all_species"], [1, 2, 1, "", "delete_assignment_rule"], [1, 2, 1, "", "delete_event"], [1, 2, 1, "", "delete_function_definition"], [1, 2, 1, "", "delete_parameter"], [1, 2, 1, "", "delete_rate_rule"], [1, 2, 1, "", "delete_reaction"], [1, 2, 1, "", "delete_species"], [1, 2, 1, "", "get_all_assignment_rules"], [1, 2, 1, "", "get_all_events"], [1, 2, 1, "", "get_all_function_definitions"], [1, 2, 1, "", "get_all_parameters"], [1, 2, 1, "", "get_all_rate_rules"], [1, 2, 1, "", "get_all_reactions"], [1, 2, 1, "", "get_all_species"], [1, 2, 1, "", "get_assignment_rule"], [1, 2, 1, "", "get_best_solver"], [1, 2, 1, "", "get_best_solver_algo"], [1, 2, 1, "", "get_element"], [1, 2, 1, "", "get_event"], [1, 2, 1, "", "get_function_definition"], [1, 2, 1, "", "get_model_features"], [1, 2, 1, "", "get_parameter"], [1, 2, 1, "", "get_rate_rule"], [1, 2, 1, "", "get_reaction"], [1, 2, 1, "", "get_species"], [1, 2, 1, "", "make_translation_table"], [1, 2, 1, "", "problem_with_name"], [1, 5, 1, "", "reserved_names"], [1, 2, 1, "", "run"], [1, 2, 1, "", "sanitized_parameter_names"], [1, 2, 1, "", "sanitized_species_names"], [1, 2, 1, "", "serialize"], [1, 2, 1, "", "set_parameter"], [1, 2, 1, "", "set_units"], [1, 5, 1, "", "special_characters"], [1, 2, 1, "", "timespan"], [1, 2, 1, "", "update_namespace"], [1, 2, 1, "", "validate_reactants_and_products"]], "gillespy2.core.model.StochMLDocument": [[1, 2, 1, "", "from_file"], [1, 2, 1, "", "from_model"], [1, 2, 1, "", "from_string"], [1, 2, 1, "", "to_model"], [1, 2, 1, "", "to_string"]], "gillespy2.core.parameter": [[1, 1, 1, "", "Parameter"]], "gillespy2.core.parameter.Parameter": [[1, 2, 1, "", "sanitized_expression"], [1, 2, 1, "", "validate"]], "gillespy2.core.raterule": [[1, 1, 1, "", "RateRule"]], "gillespy2.core.raterule.RateRule": [[1, 2, 1, "", "sanitized_formula"]], "gillespy2.core.reaction": [[1, 1, 1, "", "Reaction"]], "gillespy2.core.reaction.Reaction": [[1, 2, 1, "", "Annotate"], [1, 2, 1, "", "addProduct"], [1, 2, 1, "", "addReactant"], [1, 2, 1, "", "add_product"], [1, 2, 1, "", "add_reactant"], [1, 2, 1, "", "create_mass_action"], [1, 2, 1, "", "from_json"], [1, 2, 1, "", "sanitized_propensity_function"], [1, 2, 1, "", "setType"], [1, 2, 1, "", "set_annotation"], [1, 2, 1, "", "set_propensities"], [1, 2, 1, "", "set_rate"], [1, 2, 1, "", "to_dict"], [1, 2, 1, "", "validate"], [1, 2, 1, "", "verify"]], "gillespy2.core.results": [[1, 1, 1, "", "Results"], [1, 1, 1, "", "Trajectory"], [1, 6, 1, "", "common_rgb_values"]], "gillespy2.core.results.Results": [[1, 2, 1, "", "average_ensemble"], [1, 2, 1, "", "build_from_solver_results"], [1, 2, 1, "", "plot"], [1, 2, 1, "", "plot_mean_stdev"], [1, 2, 1, "", "plot_std_dev_range"], [1, 2, 1, "", "plotplotly"], [1, 2, 1, "", "plotplotly_mean_stdev"], [1, 2, 1, "", "plotplotly_std_dev_range"], [1, 2, 1, "", "stddev_ensemble"], [1, 2, 1, "", "to_array"], [1, 2, 1, "", "to_csv"]], "gillespy2.core.sortableobject": [[1, 1, 1, "", "SortableObject"]], "gillespy2.core.species": [[1, 1, 1, "", "Species"]], "gillespy2.core.species.Species": [[1, 2, 1, "", "set_initial_value"], [1, 2, 1, "", "validate"]], "gillespy2.core.timespan": [[1, 1, 1, "", "TimeSpan"]], "gillespy2.core.timespan.TimeSpan": [[1, 2, 1, "", "arange"], [1, 2, 1, "", "linspace"], [1, 2, 1, "", "validate"]], "gillespy2.solvers": [[3, 1, 1, "", "CLESolver"], [3, 1, 1, "", "NumPySSASolver"], [3, 1, 1, "", "ODECSolver"], [3, 1, 1, "", "ODESolver"], [3, 1, 1, "", "SSACSolver"], [3, 1, 1, "", "TauHybridCSolver"], [3, 1, 1, "", "TauHybridSolver"], [3, 1, 1, "", "TauLeapingCSolver"], [3, 1, 1, "", "TauLeapingSolver"], [5, 0, 0, "-", "cpp"], [8, 0, 0, "-", "numpy"], [10, 0, 0, "-", "utilities"]], "gillespy2.solvers.CLESolver": [[3, 2, 1, "", "get_solver_settings"], [3, 5, 1, "", "name"], [3, 5, 1, "", "pause_event"], [3, 5, 1, "", "rc"], [3, 5, 1, "", "result"], [3, 2, 1, "", "run"], [3, 5, 1, "", "stop_event"]], "gillespy2.solvers.NumPySSASolver": [[3, 2, 1, "", "get_solver_settings"], [3, 5, 1, "", "name"], [3, 5, 1, "", "pause_event"], [3, 5, 1, "", "rc"], [3, 5, 1, "", "result"], [3, 2, 1, "", "run"], [3, 5, 1, "", "stop_event"]], "gillespy2.solvers.ODECSolver": [[3, 2, 1, "", "get_solver_settings"], [3, 2, 1, "", "get_supported_integrator_options"], [3, 5, 1, "", "name"], [3, 2, 1, "", "run"], [3, 5, 1, "", "target"]], "gillespy2.solvers.ODESolver": [[3, 2, 1, "", "get_solver_settings"], [3, 5, 1, "", "name"], [3, 5, 1, "", "pause_event"], [3, 5, 1, "", "rc"], [3, 5, 1, "", "result"], [3, 2, 1, "", "run"], [3, 5, 1, "", "stop_event"]], "gillespy2.solvers.SSACSolver": [[3, 2, 1, "", "get_solver_settings"], [3, 5, 1, "", "name"], [3, 2, 1, "", "run"], [3, 5, 1, "", "target"]], "gillespy2.solvers.TauHybridCSolver": [[3, 1, 1, "", "ErrorStatus"], [3, 2, 1, "", "get_solver_settings"], [3, 2, 1, "", "get_supported_features"], [3, 2, 1, "", "get_supported_integrator_options"], [3, 5, 1, "", "name"], [3, 2, 1, "", "run"], [3, 5, 1, "", "target"]], "gillespy2.solvers.TauHybridCSolver.ErrorStatus": [[3, 5, 1, "", "INTEGRATOR_FAILED"], [3, 5, 1, "", "INVALID_AFTER_SSA"], [3, 5, 1, "", "LOOP_OVER_INTEGRATE"], [3, 5, 1, "", "NEGATIVE_STATE_AT_BEGINING_OF_STEP"], [3, 5, 1, "", "NEGATIVE_STATE_NO_SSA_REACTION"], [3, 5, 1, "", "UNKNOWN"]], "gillespy2.solvers.TauHybridSolver": [[3, 2, 1, "", "get_solver_settings"], [3, 2, 1, "", "get_supported_features"], [3, 5, 1, "", "name"], [3, 5, 1, "", "rc"], [3, 5, 1, "", "result"], [3, 2, 1, "", "run"], [3, 5, 1, "", "stop_event"]], "gillespy2.solvers.TauLeapingCSolver": [[3, 2, 1, "", "get_solver_settings"], [3, 5, 1, "", "name"], [3, 2, 1, "", "run"], [3, 5, 1, "", "target"]], "gillespy2.solvers.TauLeapingSolver": [[3, 2, 1, "", "get_solver_settings"], [3, 5, 1, "", "name"], [3, 5, 1, "", "pause_event"], [3, 5, 1, "", "rc"], [3, 5, 1, "", "result"], [3, 2, 1, "", "run"], [3, 5, 1, "", "stop_event"]], "gillespy2.solvers.cpp": [[5, 1, 1, "", "ODECSolver"], [5, 1, 1, "", "SSACSolver"], [5, 1, 1, "", "TauHybridCSolver"], [5, 1, 1, "", "TauLeapingCSolver"], [6, 0, 0, "-", "build"], [5, 0, 0, "-", "c_decoder"], [5, 0, 0, "-", "c_solver"], [5, 0, 0, "-", "ode_c_solver"], [5, 0, 0, "-", "ssa_c_solver"], [5, 0, 0, "-", "tau_hybrid_c_solver"], [5, 0, 0, "-", "tau_leaping_c_solver"]], "gillespy2.solvers.cpp.ODECSolver": [[5, 5, 1, "", "build_engine"], [5, 2, 1, "", "get_solver_settings"], [5, 2, 1, "", "get_supported_integrator_options"], [5, 5, 1, "", "name"], [5, 2, 1, "", "run"], [5, 5, 1, "", "target"]], "gillespy2.solvers.cpp.SSACSolver": [[5, 5, 1, "", "build_engine"], [5, 2, 1, "", "get_solver_settings"], [5, 5, 1, "", "name"], [5, 2, 1, "", "run"], [5, 5, 1, "", "target"]], "gillespy2.solvers.cpp.TauHybridCSolver": [[5, 1, 1, "", "ErrorStatus"], [5, 5, 1, "", "build_engine"], [5, 2, 1, "", "get_solver_settings"], [5, 2, 1, "", "get_supported_features"], [5, 2, 1, "", "get_supported_integrator_options"], [5, 5, 1, "", "name"], [5, 2, 1, "", "run"], [5, 5, 1, "", "target"]], "gillespy2.solvers.cpp.TauHybridCSolver.ErrorStatus": [[5, 5, 1, "", "INTEGRATOR_FAILED"], [5, 5, 1, "", "INVALID_AFTER_SSA"], [5, 5, 1, "", "LOOP_OVER_INTEGRATE"], [5, 5, 1, "", "NEGATIVE_STATE_AT_BEGINING_OF_STEP"], [5, 5, 1, "", "NEGATIVE_STATE_NO_SSA_REACTION"], [5, 5, 1, "", "UNKNOWN"]], "gillespy2.solvers.cpp.TauLeapingCSolver": [[5, 5, 1, "", "build_engine"], [5, 2, 1, "", "get_solver_settings"], [5, 5, 1, "", "name"], [5, 2, 1, "", "run"], [5, 5, 1, "", "target"]], "gillespy2.solvers.cpp.build": [[6, 0, 0, "-", "build_engine"], [6, 0, 0, "-", "expression"], [6, 0, 0, "-", "make"], [6, 0, 0, "-", "template_gen"]], "gillespy2.solvers.cpp.build.build_engine": [[6, 1, 1, "", "BuildEngine"]], "gillespy2.solvers.cpp.build.build_engine.BuildEngine": [[6, 2, 1, "", "build_cache"], [6, 2, 1, "", "build_simulation"], [6, 2, 1, "", "clean"], [6, 2, 1, "", "get_executable_path"], [6, 2, 1, "", "get_missing_dependencies"], [6, 2, 1, "", "prepare"], [6, 5, 1, "", "template_definitions_name"], [6, 5, 1, "", "template_options_name"]], "gillespy2.solvers.cpp.build.expression": [[6, 1, 1, "", "CppConverter"], [6, 1, 1, "", "Expression"], [6, 1, 1, "", "ExpressionConverter"], [6, 1, 1, "", "ExpressionResults"], [6, 1, 1, "", "PythonConverter"]], "gillespy2.solvers.cpp.build.expression.CppConverter": [[6, 1, 1, "", "CppExpressionTransformer"], [6, 2, 1, "", "get_str"], [6, 2, 1, "", "visit_And"], [6, 2, 1, "", "visit_Or"]], "gillespy2.solvers.cpp.build.expression.CppConverter.CppExpressionTransformer": [[6, 2, 1, "", "visit_BinOp"]], "gillespy2.solvers.cpp.build.expression.Expression": [[6, 1, 1, "", "ValidationVisitor"], [6, 2, 1, "", "getexpr_cpp"], [6, 2, 1, "", "getexpr_python"], [6, 2, 1, "", "map_operator"], [6, 5, 1, "", "operator_map"], [6, 2, 1, "", "validate"], [6, 2, 1, "", "with_blacklist"], [6, 2, 1, "", "with_namespace"]], "gillespy2.solvers.cpp.build.expression.Expression.ValidationVisitor": [[6, 2, 1, "", "check_blacklist"], [6, 2, 1, "", "visit_Assign"], [6, 2, 1, "", "visit_BinOp"], [6, 2, 1, "", "visit_BoolOp"], [6, 2, 1, "", "visit_Call"], [6, 2, 1, "", "visit_Compare"], [6, 2, 1, "", "visit_Name"], [6, 2, 1, "", "visit_UnaryOp"]], "gillespy2.solvers.cpp.build.expression.ExpressionConverter": [[6, 2, 1, "", "convert_str"], [6, 2, 1, "", "get_str"], [6, 2, 1, "", "parse_comparison"], [6, 2, 1, "", "parse_logical"], [6, 2, 1, "", "parse_operator"], [6, 2, 1, "", "visit_Add"], [6, 2, 1, "", "visit_BinOp"], [6, 2, 1, "", "visit_BoolOp"], [6, 2, 1, "", "visit_Bytes"], [6, 2, 1, "", "visit_Call"], [6, 2, 1, "", "visit_Compare"], [6, 2, 1, "", "visit_Constant"], [6, 2, 1, "", "visit_Div"], [6, 2, 1, "", "visit_Ellipsis"], [6, 2, 1, "", "visit_Eq"], [6, 2, 1, "", "visit_Gt"], [6, 2, 1, "", "visit_GtE"], [6, 2, 1, "", "visit_Lt"], [6, 2, 1, "", "visit_LtE"], [6, 2, 1, "", "visit_Mult"], [6, 2, 1, "", "visit_Name"], [6, 2, 1, "", "visit_NameConstant"], [6, 2, 1, "", "visit_NotEq"], [6, 2, 1, "", "visit_Num"], [6, 2, 1, "", "visit_Pow"], [6, 2, 1, "", "visit_Str"], [6, 2, 1, "", "visit_Sub"], [6, 2, 1, "", "visit_USub"], [6, 2, 1, "", "visit_UnaryOp"]], "gillespy2.solvers.cpp.build.expression.PythonConverter": [[6, 2, 1, "", "visit_And"], [6, 2, 1, "", "visit_Or"]], "gillespy2.solvers.cpp.build.make": [[6, 1, 1, "", "Make"]], "gillespy2.solvers.cpp.build.make.Make": [[6, 2, 1, "", "build_simulation"], [6, 2, 1, "", "prebuild"]], "gillespy2.solvers.cpp.build.template_gen": [[6, 1, 1, "", "SanitizedModel"], [6, 6, 1, "", "get_model_defines"], [6, 6, 1, "", "template_def_propensities"], [6, 6, 1, "", "template_def_rate_rules"], [6, 6, 1, "", "template_def_reactions"], [6, 6, 1, "", "template_def_species"], [6, 6, 1, "", "template_def_variables"], [6, 6, 1, "", "update_model_options"], [6, 6, 1, "", "write_definitions"], [6, 6, 1, "", "write_template"]], "gillespy2.solvers.cpp.build.template_gen.SanitizedModel": [[6, 5, 1, "", "function_map"], [6, 2, 1, "", "get_options"], [6, 2, 1, "", "get_template"], [6, 5, 1, "", "reserved_names"], [6, 2, 1, "", "use_propensity"], [6, 2, 1, "", "use_rate_rule"], [6, 2, 1, "", "use_reaction"]], "gillespy2.solvers.cpp.c_decoder": [[5, 1, 1, "", "BasicSimDecoder"], [5, 1, 1, "", "IterativeSimDecoder"], [5, 1, 1, "", "SimDecoder"]], "gillespy2.solvers.cpp.c_decoder.BasicSimDecoder": [[5, 2, 1, "", "get_output"], [5, 2, 1, "", "read"]], "gillespy2.solvers.cpp.c_decoder.IterativeSimDecoder": [[5, 2, 1, "", "get_output"], [5, 2, 1, "", "read"], [5, 2, 1, "", "with_callback"]], "gillespy2.solvers.cpp.c_decoder.SimDecoder": [[5, 2, 1, "", "create_default"], [5, 2, 1, "", "get_output"], [5, 2, 1, "", "read"]], "gillespy2.solvers.cpp.c_solver": [[5, 1, 1, "", "CSolver"], [5, 1, 1, "", "SimulationReturnCode"]], "gillespy2.solvers.cpp.c_solver.CSolver": [[5, 5, 1, "", "rc"]], "gillespy2.solvers.cpp.c_solver.SimulationReturnCode": [[5, 5, 1, "", "DONE"], [5, 5, 1, "", "FAILED"], [5, 5, 1, "", "PAUSED"]], "gillespy2.solvers.cpp.ode_c_solver.ODECSolver": [[5, 2, 1, "", "get_solver_settings"], [5, 2, 1, "", "get_supported_integrator_options"], [5, 5, 1, "", "name"], [5, 2, 1, "", "run"], [5, 5, 1, "", "target"]], "gillespy2.solvers.cpp.ssa_c_solver.SSACSolver": [[5, 2, 1, "", "get_solver_settings"], [5, 5, 1, "", "name"], [5, 2, 1, "", "run"], [5, 5, 1, "", "target"]], "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver": [[5, 2, 1, "", "get_solver_settings"], [5, 2, 1, "", "get_supported_features"], [5, 2, 1, "", "get_supported_integrator_options"], [5, 5, 1, "", "name"], [5, 2, 1, "", "run"], [5, 5, 1, "", "target"]], "gillespy2.solvers.cpp.tau_hybrid_c_solver.TauHybridCSolver.ErrorStatus": [[5, 5, 1, "", "INTEGRATOR_FAILED"], [5, 5, 1, "", "INVALID_AFTER_SSA"], [5, 5, 1, "", "LOOP_OVER_INTEGRATE"], [5, 5, 1, "", "NEGATIVE_STATE_AT_BEGINING_OF_STEP"], [5, 5, 1, "", "NEGATIVE_STATE_NO_SSA_REACTION"], [5, 5, 1, "", "UNKNOWN"]], "gillespy2.solvers.cpp.tau_leaping_c_solver.TauLeapingCSolver": [[5, 2, 1, "", "get_solver_settings"], [5, 5, 1, "", "name"], [5, 2, 1, "", "run"], [5, 5, 1, "", "target"]], "gillespy2.solvers.numpy": [[8, 1, 1, "", "CLESolver"], [8, 0, 0, "-", "CLE_solver"], [8, 1, 1, "", "NumPySSASolver"], [8, 1, 1, "", "ODESolver"], [8, 1, 1, "", "TauHybridSolver"], [8, 1, 1, "", "TauLeapingSolver"], [8, 0, 0, "-", "ode_solver"], [8, 0, 0, "-", "ssa_solver"], [8, 0, 0, "-", "tau_hybrid_solver"], [8, 0, 0, "-", "tau_leaping_solver"]], "gillespy2.solvers.numpy.CLESolver": [[8, 2, 1, "", "get_solver_settings"], [8, 5, 1, "", "name"], [8, 5, 1, "", "pause_event"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.CLE_solver.CLESolver": [[8, 2, 1, "", "get_solver_settings"], [8, 5, 1, "", "name"], [8, 5, 1, "", "pause_event"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.NumPySSASolver": [[8, 2, 1, "", "get_solver_settings"], [8, 5, 1, "", "name"], [8, 5, 1, "", "pause_event"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.ODESolver": [[8, 2, 1, "", "get_solver_settings"], [8, 5, 1, "", "name"], [8, 5, 1, "", "pause_event"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.TauHybridSolver": [[8, 2, 1, "", "get_solver_settings"], [8, 2, 1, "", "get_supported_features"], [8, 5, 1, "", "name"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.TauLeapingSolver": [[8, 2, 1, "", "get_solver_settings"], [8, 5, 1, "", "name"], [8, 5, 1, "", "pause_event"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.ode_solver.ODESolver": [[8, 2, 1, "", "get_solver_settings"], [8, 5, 1, "", "name"], [8, 5, 1, "", "pause_event"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.ssa_solver.NumPySSASolver": [[8, 2, 1, "", "get_solver_settings"], [8, 5, 1, "", "name"], [8, 5, 1, "", "pause_event"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.tau_hybrid_solver.TauHybridSolver": [[8, 2, 1, "", "get_solver_settings"], [8, 2, 1, "", "get_supported_features"], [8, 5, 1, "", "name"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.numpy.tau_leaping_solver.TauLeapingSolver": [[8, 2, 1, "", "get_solver_settings"], [8, 5, 1, "", "name"], [8, 5, 1, "", "pause_event"], [8, 5, 1, "", "rc"], [8, 5, 1, "", "result"], [8, 2, 1, "", "run"], [8, 5, 1, "", "stop_event"]], "gillespy2.solvers.utilities": [[10, 0, 0, "-", "Tau"], [10, 0, 0, "-", "cpp_support_test"], [10, 0, 0, "-", "solverutils"]], "gillespy2.solvers.utilities.Tau": [[10, 6, 1, "", "initialize"], [10, 6, 1, "", "select"]], "gillespy2.solvers.utilities.cpp_support_test": [[10, 6, 1, "", "check_cpp_support"]], "gillespy2.solvers.utilities.solverutils": [[10, 6, 1, "", "change_param_values"], [10, 6, 1, "", "dependency_grapher"], [10, 6, 1, "", "numpy_initialization"], [10, 6, 1, "", "numpy_resume"], [10, 6, 1, "", "numpy_trajectory_base_initialization"], [10, 6, 1, "", "species_parse"], [10, 6, 1, "", "update_species_init_values"]], "gillespy2.stochss": [[11, 0, 0, "-", "StochSSexport"]], "gillespy2.stochss.StochSSexport": [[11, 6, 1, "", "export"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "terms": {"": [1, 6, 12, 14, 17], "0": [1, 3, 5, 8, 12, 17], "005": 12, "01": [3, 8], "03": [1, 3, 5, 8], "044109": 10, "05": 1, "08": 12, "1": [1, 3, 5, 8, 10, 12, 17], "10": [1, 10, 12, 17], "100": [3, 8, 12, 17], "10000": 12, "101": [12, 17], "1063": 10, "12": [1, 3, 8], "124": 10, "124d4109c": 10, "15": 12, "16460151": 10, "18": 1, "1999": 17, "1e": [3, 8], "2": [1, 3, 5, 12, 17], "20": 1, "2006": 10, "2006jchph": 10, "2159468": 10, "23": 1, "256": 5, "2e": 12, "2r01eb014877": 14, "3": [3, 5, 13], "30": 12, "31": 1, "33": 5, "3d": 5, "3e": 12, "4": [1, 3, 5, 10, 12], "400": 12, "5": [3, 5], "50": 1, "59": 1, "5e": 12, "6": [3, 5], "600": 12, "601": 12, "8601": 1, "9": [3, 8], "9999": 1, "999999": 1, "A": [1, 3, 5, 6, 8, 12], "And": [6, 17], "As": 13, "BE": 1, "By": [1, 3, 5, 8], "FOR": 1, "For": [1, 3, 5, 6, 8, 12], "IF": 1, "IN": 1, "If": [1, 3, 5, 6, 8, 14], "In": [1, 12, 17], "It": [12, 14], "NOT": 1, "Not": 6, "OR": 1, "Or": 6, "That": 1, "The": [1, 3, 5, 6, 8, 10, 12, 14, 17], "There": [1, 12], "To": 1, "WITH": 1, "With": 12, "_": 1, "__dict__": 1, "__new__": 1, "ab": 6, "abc": 5, "abl": 13, "about": [1, 3, 5, 8], "abov": [12, 17], "absolut": 6, "abstract": [1, 5, 12], "accept": [1, 5, 6], "access": 1, "accur": 17, "accuraci": [3, 5, 8, 12], "achiev": 12, "action": [1, 6], "activ": 1, "ad": 1, "add": [0, 1, 6], "add_assign": [0, 1], "add_assignment_rul": [0, 1], "add_ev": [0, 1], "add_function_definit": [0, 1], "add_paramet": [0, 1, 12, 17], "add_product": [0, 1], "add_rate_rul": [0, 1], "add_react": [0, 1, 12, 17], "add_speci": [0, 1, 12, 17], "addit": [1, 3, 5, 8, 12], "addition": 6, "addproduct": [0, 1], "addreact": [0, 1], "after": [1, 6, 10], "again": 17, "against": 6, "al": 17, "algorithm": [1, 3, 5, 8, 12, 17], "all": [1, 3, 5, 6, 8, 12, 17], "allow": [1, 6, 17], "allow_negative_popul": 1, "along": [3, 5, 8], "alpha1": 17, "alpha2": 17, "alreadi": [1, 5], "also": [1, 12, 14], "altern": 12, "alwai": [3, 5, 8], "an": [1, 3, 5, 6, 8, 12, 13, 14, 17], "ani": [1, 5, 6, 14, 17], "annot": [0, 1], "anon": 1, "anonym": 1, "anonymis": 1, "anoth": 12, "anyth": 1, "apart": 12, "append": [0, 1], "appli": [1, 6], "approach": 14, "appropri": 17, "ar": [1, 3, 5, 6, 8, 10, 12, 17], "arang": [0, 1], "arbitrari": 1, "arg": 1, "argument": [1, 3, 5, 6, 8, 12, 17], "around": [1, 6], "arrai": [1, 3, 5, 8, 12], "artifact": 6, "assign": [1, 6], "assignemt": 1, "assignment_express": 1, "assignment_rul": 1, "assignmentrul": 0, "assignmentruleerror": [0, 1], "associ": [1, 6], "assum": [1, 5, 6, 17], "ast": [6, 10], "astimezon": [0, 1], "atol": [3, 8], "attach": 6, "attribut": 1, "author": 14, "auto": 1, "automat": [1, 3, 5, 6, 12], "automaticswitchexampl": 12, "avail": [5, 14], "average_ensembl": [0, 1], "axi": 1, "b": 12, "back": [1, 12], "bad": 1, "base": [1, 3, 5, 6, 8, 10, 17], "basic": [14, 17], "basic_tau_hybrid": 10, "basic_tau_leaping_solv": 10, "basicsimdecod": [3, 5], "basictauhybridsolv": 12, "becaus": 17, "been": [5, 6], "befor": [1, 6], "begin": [1, 17], "behavior": [1, 5, 6], "being": [1, 6, 10], "below": 1, "best": [1, 12], "beta": 17, "better": 5, "between": [1, 3, 5, 6, 8, 12], "bibcod": 10, "binop": 6, "biochem": [1, 12, 14, 17], "biolog": 14, "biomolecul": 17, "bitand": 6, "bitor": 6, "bitxor": 6, "blacklist": 6, "block": 5, "bodi": 1, "bool": [1, 3, 5, 6, 8], "boolean": 1, "boolop": 6, "both": [1, 6, 17], "bound": [1, 3, 5, 8], "boundari": [3, 5], "boundary_condit": 1, "break": 12, "brian": 14, "buffer": 5, "bufferedread": 5, "build": [1, 3, 5], "build_cach": [5, 6], "build_engin": [3, 5], "build_from_solver_result": [0, 1], "build_simul": [5, 6], "buildengin": [5, 6], "builderror": [0, 1], "built": 6, "byte": [5, 6], "c": [1, 5, 6, 10, 12, 14], "c_decod": [0, 3], "c_solver": [0, 3], "cach": 6, "cache_dir": 6, "calcul": [1, 3, 5, 8], "call": [1, 3, 5, 6, 8, 12], "callabl": [1, 5], "callback": 5, "can": [1, 3, 5, 8, 12, 13, 14, 17], "cannot": 1, "cao": 10, "captur": 17, "care": 1, "case": 1, "caus": [1, 6], "caution": 1, "cd": 13, "cellular": 17, "chainmap": [0, 1], "chang": [1, 3, 5, 8], "change_param_valu": [3, 10], "characterist": [12, 17], "check": [1, 6, 10], "check_blacklist": 6, "check_cpp_support": [3, 10], "chemic": [1, 3, 5, 8, 10], "choic": 10, "choos": 1, "chosen": 1, "class": [1, 3, 5, 6, 8, 12, 17], "classmethod": [1, 3, 5, 6, 8], "cle": 8, "cle_solv": [0, 3], "clean": [5, 6], "cleanup": 0, "cleanup_tempfil": [0, 1], "clear": [0, 1], "clear_output": [1, 3, 5, 8], "clesolv": [0, 3, 8], "clone": 13, "code": [1, 12, 14, 17], "coder": 1, "coli": 17, "collect": [1, 3, 5], "color": 1, "com": 13, "combin": [0, 1, 10, 12], "come": 12, "comma": 1, "command": [12, 13], "common_rgb_valu": [0, 1], "compar": [1, 6, 17], "compart": 1, "compat": 1, "compil": 6, "compile_prep": [0, 1], "complet": [1, 5], "completet": 5, "complex": 1, "complexjsoncod": [0, 1], "compon": [1, 12, 17], "comput": 13, "concentr": [1, 17], "condit": 1, "configur": 1, "consid": 1, "consist": [5, 6], "constant": [1, 6, 12], "constant_tau_steps": [3, 5, 8], "construct": 1, "constructor": [1, 5], "consum": 1, "contact": 14, "contain": [1, 3, 5, 6, 8, 10, 12], "content": 14, "continu": [1, 3, 5, 8, 12, 14, 17], "contrast": 1, "control": 1, "convers": [1, 6, 11], "convert": [1, 6, 11], "convert_str": [5, 6], "copi": [0, 1, 6, 13], "core": [0, 10, 14], "correspond": [1, 6], "cost": 5, "could": 1, "count": [0, 1], "counter": 1, "coverag": 1, "cpp": [0, 3], "cpp_support_test": [0, 3], "cppconvert": [5, 6], "cppexpressiontransform": [5, 6], "creat": [1, 5, 6, 10, 12, 14], "create_default": [3, 5], "create_mass_act": [0, 1], "creation": 12, "crepeattim": [0, 1], "csolver": [3, 5], "csv": 1, "ctime": [0, 1], "cu": 17, "curr_stat": 1, "curr_tim": 1, "current": [1, 6, 10, 12], "custom": [1, 5, 6, 10, 12], "custom_prop_fun": 10, "cv": 17, "cython": 14, "d": [1, 10, 12], "d_result": 17, "dai": 1, "data": [1, 3, 5, 6, 8, 10, 12], "date": [0, 1], "datetim": [0, 1], "ddof": 1, "ddt": 1, "debug": [1, 3, 5, 6, 8], "debugg": 6, "decai": 12, "decod": [0, 1, 5], "def": [5, 12, 17], "default": [0, 1, 3, 5, 8], "defin": [1, 6, 12, 17], "definit": [1, 6, 12, 17], "defint": 1, "degre": 1, "delai": 1, "deleg": 1, "delet": [1, 5, 6], "delete_all_assignment_rul": [0, 1], "delete_all_ev": [0, 1], "delete_all_function_definit": [0, 1], "delete_all_paramet": [0, 1], "delete_all_rate_rul": [0, 1], "delete_all_react": [0, 1], "delete_all_speci": [0, 1], "delete_assignment_rul": [0, 1], "delete_directori": [3, 5], "delete_ev": [0, 1], "delete_function_definit": [0, 1], "delete_paramet": [0, 1], "delete_rate_rul": [0, 1], "delete_react": [0, 1], "delete_speci": [0, 1], "delta": 1, "demonstr": [12, 17], "denot": [3, 5, 8], "depend": [1, 6, 10], "dependency_graph": [3, 10], "depict": 1, "deprec": [1, 3, 5, 8], "describ": [1, 10], "descript": 1, "deseri": 1, "design": [1, 12], "desir": 1, "detail": [3, 8], "detect": [1, 3, 8], "determin": [1, 6], "determinist": [1, 3, 5, 8, 12, 17], "develop": 14, "deviat": 1, "dicctionari": 1, "dict": [1, 3, 5, 6, 8], "dictionari": [1, 3, 5, 6, 8, 10, 12], "differ": [6, 13], "differenti": [3, 5, 8, 17], "dimer": 12, "direct": [3, 5, 8, 14], "directli": [1, 5, 13, 14], "directori": [1, 5, 6, 12], "directoryerror": [0, 1], "discret": 1, "disk": 1, "displai": [0, 1, 3, 5, 8], "display_typ": [0, 1], "dissoci": 12, "distanc": 1, "div": 6, "divisor": 1, "do": [1, 12], "doc": [3, 8], "document": 1, "doe": [1, 6], "doi": 10, "done": [3, 5], "dop853": [3, 8], "dopri5": [3, 8], "dr": 14, "drawert": 14, "dst": [0, 1], "dt": 1, "du": 17, "dump": 1, "duplic": 6, "durat": 1, "dure": [1, 6], "dv": 17, "dx": 1, "dynam": [1, 12, 17], "e": 1, "each": [1, 3, 5, 8, 12], "edit": 1, "effici": [10, 12], "either": 1, "element": 1, "ellipsi": 6, "els": 1, "empti": [1, 6], "enabl": [1, 6], "encod": 1, "encode_priv": 1, "end": [1, 3, 5, 8, 12], "ensur": [1, 6], "entri": 5, "environ": [1, 6, 14], "epsilon": 10, "eq": 6, "equal": 1, "equat": [1, 3, 5, 8, 12, 17], "equival": 1, "error": 1, "errorstatu": [0, 3, 5], "escherichia": 17, "estim": 1, "et": 17, "evalu": 1, "evenli": 1, "event": [0, 3, 8], "event_sensit": [3, 8], "eventassign": [0, 1], "eventerror": [0, 1], "eventtrigg": [0, 1], "everi": 1, "evetn": 1, "exampl": [1, 3, 6, 8], "except": 1, "execut": [1, 6, 12], "executionerror": [0, 1], "exisit": 1, "exist": [1, 3, 5, 6], "exit": [3, 5, 8], "expect": [5, 6], "export": [0, 1, 11], "export_sbml": [0, 1], "export_stochss": [0, 1], "express": [1, 3, 5, 12, 17], "expressionconvert": [5, 6], "expressionresult": [5, 6], "extend": [0, 1], "extens": 6, "f": 1, "facil": [12, 17], "fail": [1, 3, 5, 6, 17], "failur": 1, "fals": [1, 3, 5, 6, 8, 11], "far": 6, "featur": [1, 3, 5, 6, 8], "few": 12, "field": 1, "fifo": 1, "figsiz": [1, 12], "figur": [1, 12], "file": [1, 6, 10, 11, 12, 14], "file_obj": 1, "filenam": 1, "filepath": [1, 6], "fill": 14, "final": 13, "find": [1, 3, 5, 8, 14], "finish": 1, "fire": 1, "first": [1, 5, 12, 13, 17], "flag": 6, "flatten": 1, "flight": 6, "float": [1, 3, 5, 8], "floordiv": 6, "fold": [0, 1], "follow": [1, 6, 12, 13, 17], "force_rebuild": 6, "form": [1, 10, 12, 14], "format": [1, 6, 12, 14], "formul": 17, "formula": 1, "forthcom": [15, 16], "found": [1, 6, 10, 14], "freak": 1, "freedom": 1, "from": [1, 3, 5, 6, 8, 12, 13, 14], "from_dict": [0, 1], "from_fil": [0, 1], "from_json": [0, 1], "from_model": [0, 1], "from_str": [0, 1], "fromisoformat": [0, 1], "fromkei": [0, 1], "frommodel": 1, "fromtimestamp": [0, 1], "fulli": [5, 6], "function": [1, 3, 5, 8, 10], "function_definit": 1, "function_map": [5, 6], "functiondefinit": 0, "functiondefinitionerror": [0, 1], "fund": 14, "further": 1, "g": 1, "gamma": 17, "gardner": 17, "gener": [1, 3, 6, 8, 14], "genet": 17, "get": [0, 1, 3, 5, 6, 8, 13], "get_all_assignment_rul": [0, 1], "get_all_ev": [0, 1], "get_all_function_definit": [0, 1], "get_all_paramet": [0, 1], "get_all_rate_rul": [0, 1], "get_all_react": [0, 1], "get_all_speci": [0, 1], "get_arg_str": [0, 1], "get_assignment_rul": [0, 1], "get_best_solv": [0, 1], "get_best_solver_algo": [0, 1], "get_el": [0, 1], "get_ev": [0, 1], "get_executable_path": [5, 6], "get_function_definit": [0, 1], "get_json_hash": [0, 1], "get_missing_depend": [5, 6], "get_model_defin": [5, 6], "get_model_featur": [0, 1], "get_opt": [5, 6], "get_output": [3, 5], "get_paramet": [0, 1], "get_rate_rul": [0, 1], "get_react": [0, 1], "get_solver_set": [0, 1, 3, 5, 8], "get_speci": [0, 1], "get_str": [5, 6], "get_supported_featur": [0, 1, 3, 5, 8], "get_supported_integrator_opt": [0, 1, 3, 5], "get_templ": [5, 6], "get_translation_t": [0, 1], "getexpr_cpp": [5, 6], "getexpr_python": [5, 6], "gillespi": [1, 3, 5, 10, 11, 14], "gillespy2": [13, 17], "gillespy_model": 1, "gillespyerror": 0, "gillespysolv": [0, 3, 5, 8], "git": 13, "github": [13, 14], "given": [1, 3, 5, 6, 8, 12, 17], "gnu": 14, "grant": 14, "graph": [1, 3, 5, 8, 10], "grapher": 1, "graphic": 12, "greater": 12, "greatli": [3, 5, 8], "group": 1, "gt": 6, "gte": 6, "h": 6, "ha": [1, 5, 6, 12, 14], "handl": [5, 6], "handler": 1, "hash": 1, "hash_private_v": 1, "have": [1, 3, 5, 8, 17], "header": [1, 6], "height": 1, "helper": 10, "here": [1, 17], "hex": 1, "hh": 1, "high": [12, 17], "hold": 1, "homogen": 17, "hour": [0, 1], "how": 1, "html": [3, 8], "http": [3, 8, 13], "hybrid": [3, 5, 12], "i": [1, 3, 5, 6, 8, 10, 12, 14, 17], "identifi": [1, 6], "ignor": [1, 5], "ignore_whitespac": 1, "immedi": 1, "impact": 1, "implement": 5, "implemente": [1, 5], "import": [1, 12, 17], "import_sbml": [0, 1], "imposs": 6, "improv": [3, 5, 8, 12], "includ": [1, 3, 6, 8, 14, 17], "included_species_list": 1, "inclus": 1, "increment": [1, 3, 5, 8], "increment_trajectori": [0, 1], "independ": 1, "index": [0, 1, 12, 14], "indexerror": 1, "indic": [1, 5, 6], "inform": [1, 3, 5, 6, 8], "informataion": 1, "inherit": [1, 3, 8], "initail": 10, "initi": [1, 3, 10, 12, 17], "initial_valu": [1, 12, 17], "initlist": 1, "input": 1, "insert": [0, 1], "inspect": [3, 8], "instal": 14, "instanc": [1, 5, 6, 12], "instanti": [1, 12, 17], "instead": [1, 6], "instruct": 13, "int": [1, 3, 5, 8], "int64": 1, "int64cod": [0, 1], "intact": 1, "integ": 1, "integr": [1, 3, 5, 8, 14], "integrator_fail": [3, 5], "integrator_opt": [3, 5, 8], "intend": [1, 5, 6], "intenum": [3, 5], "interact": 1, "interchang": [3, 5, 8], "interfac": 1, "intern": 1, "interpret": [3, 5, 8, 13], "interrupt": 1, "interv": [1, 3, 5, 8], "intial": 1, "invalid": [1, 6], "invalid_after_ssa": [3, 5], "invalid_nam": 6, "invalid_oper": 6, "invalidmodelerror": [0, 1], "invalidstochmlerror": [0, 1], "invok": [1, 5, 6, 12, 17], "io": 5, "is_valid": 6, "iso": 1, "isoformat": [0, 1], "issu": 14, "item": [0, 1, 6], "iter": [1, 5], "iterativesimdecod": [3, 5], "its": 1, "itself": 6, "journal": 10, "json": 1, "json_dict": 1, "json_object": 1, "json_str": 1, "jsonencod": 1, "jsonifi": 0, "jupyt": 1, "just": 5, "k": [1, 12], "k1": [1, 12], "k2": 12, "k3": 12, "k_c": 12, "k_d": 12, "kc": 12, "kd": 12, "kei": [0, 1, 6, 12], "keyboard": 1, "keyerror": 1, "keyword": [1, 3, 5, 8, 12, 17], "known": 12, "kwarg": [1, 3, 5, 6, 8], "kwd": 1, "l": 10, "label": [1, 12], "lack": 1, "langevin": [3, 8], "larger": [3, 5, 8], "last": 1, "later": [1, 6], "latest": 14, "layout": 1, "layout_arg": 1, "leap": [1, 3, 5, 8, 10, 14], "leav": 1, "legend": [1, 12], "len": 1, "less": 1, "let": [12, 17], "level": [1, 3, 5, 8], "licens": 14, "lifo": 1, "like": [1, 12], "limit": 17, "linear": 1, "linspac": [0, 1, 12, 17], "linux": 13, "list": [1, 3, 5, 6, 8, 10, 12], "listofparamet": 10, "listofreact": 10, "listofspeci": 10, "littl": [3, 5, 8], "live": [1, 11], "live_output": [1, 3, 5, 8], "live_output_opt": [1, 3, 5, 8], "livedisplay": [0, 1], "livegraph": 0, "loc": 12, "local": 1, "localtim": 1, "locat": 1, "longer": [3, 5, 8], "look": [10, 12], "lookup": 1, "loop_over_integr": [3, 5], "low": 12, "lower": 12, "lshift": 6, "lsoda": [3, 8], "lt": 6, "lte": 6, "m": [1, 12, 13], "machin": 10, "maco": 13, "macro": 6, "made": [1, 5, 10], "mai": [1, 5], "main": 14, "make": [1, 3, 5, 17], "make_translation_t": [0, 1], "makefil": 6, "manag": 13, "mani": 12, "manual": 1, "map": [1, 6], "map_oper": [5, 6], "marat": 1, "mass": [1, 6], "massact": 1, "master": [1, 3, 5, 8], "match": 1, "math": 1, "mathemat": [1, 14], "matmult": 6, "matplotlib": [1, 12], "matrix": 6, "matter": 1, "max": [0, 1], "max_step": [3, 8], "md": 12, "md5": 1, "mean": [1, 12], "member": 5, "method": [1, 3, 5, 8, 10, 12, 14, 17], "microsecond": [0, 1], "millisecond": 1, "min": [0, 1], "minimum": 1, "minut": [0, 1], "miss": 6, "mix": 1, "mm": 1, "mmm": 1, "mod": 6, "mode": 1, "model": [0, 3, 5, 6, 8, 10, 11, 12, 14, 17], "modelerror": [0, 1], "modifi": [1, 6], "modul": 14, "molecul": 12, "molecular": [12, 17], "monom": 12, "month": 1, "more": [1, 3, 5, 8, 12], "most": 1, "move": 1, "move_to_end": [0, 1], "mu": 17, "mult": 6, "multipl": [1, 3, 5, 8], "multiple_graph": 1, "must": 1, "mutablemap": 1, "mutablesequ": 1, "n": 1, "naiv": 1, "name": [0, 1, 3, 5, 6, 8, 10, 12, 17], "nameconst": 6, "namespac": [1, 6], "nametag": 1, "nativ": 1, "natur": 17, "nbsp": 12, "ndarrai": [1, 5], "ndarraycod": [0, 1], "ndash": 12, "need": [1, 5, 14, 17], "neg": 1, "negative_state_at_begining_of_step": [3, 5], "negative_state_no_ssa_react": [3, 5], "neither": 1, "nevertheless": 17, "new": [1, 5, 6, 12], "new_child": [0, 1], "newli": [1, 6], "next": 17, "nih": 14, "node": 6, "nodetransform": 6, "nodevisitor": 6, "non": [1, 6], "none": [1, 3, 5, 6, 8, 10, 11, 12, 17], "notat": 1, "note": 1, "notebook": 1, "noteq": 6, "noth": 1, "now": [0, 1, 17], "np": 1, "num": 6, "num_point": [1, 12, 17], "num_speci": 5, "num_timestep": 5, "num_trajectori": 5, "number": [1, 3, 5, 8, 12], "number_of_trajectori": [1, 3, 5, 8, 10, 12], "numer": 14, "numpi": [0, 1, 3, 5, 10, 14], "numpy_initi": [3, 10], "numpy_resum": [3, 10], "numpy_trajectory_base_initi": [3, 10], "numpyssasolv": [0, 3, 8], "o": 1, "obj": 1, "obj_dir": 6, "obj_to_anon": [0, 1], "obj_to_nam": [0, 1], "object": [1, 3, 5, 6, 8, 10, 12, 14, 17], "observ": 1, "occur": 1, "occurr": 1, "od": [1, 3, 5, 6, 8, 14], "odc_c_solv": [3, 5], "ode_c_solv": [0, 3], "ode_propensity_funct": 1, "ode_solv": [0, 3], "odecsolv": [0, 3, 5], "odesimul": 6, "odesolv": [0, 3, 8], "odf": 1, "off": [3, 5, 8], "offer": [12, 14], "often": 17, "old": 10, "one": [1, 5, 6, 12], "onli": [1, 6, 10], "onto": 1, "open": [5, 14], "oper": [1, 3, 5, 6, 8, 13], "operator_map": [5, 6], "optim": 14, "option": [1, 3, 5, 6, 8], "order": 1, "ordereddict": [0, 1], "ordinari": [3, 5, 8, 17], "org": [3, 8], "orient": [12, 14], "other": [1, 6], "otherwis": [1, 6], "our": [12, 14, 17], "out": [1, 3, 5, 14], "output": [1, 3, 5, 6, 8], "output_dir": 6, "output_directori": [3, 5], "outsid": 1, "over": [3, 5, 8, 12], "overal": [5, 12], "overlap": 1, "overrid": [1, 3, 5, 6], "overriden": 6, "own": 1, "p_name": 1, "packag": [13, 14, 17], "page": 14, "page_s": 5, "pair": [1, 6], "param": 6, "paramet": [0, 3, 5, 6, 8, 10, 11, 12, 17], "parameter_map": 1, "parameter_valu": [12, 17], "parametererror": [0, 1], "parent": [0, 1, 17], "pars": [1, 6, 10], "parse_comparison": [5, 6], "parse_log": [5, 6], "parse_oper": [5, 6], "part": 1, "particip": 1, "particular": 1, "pass": [1, 3, 5, 6, 8, 12], "path": [1, 6, 11], "paus": [0, 1, 3, 5], "pause_ev": [0, 3, 8], "pdf": 10, "perform": [1, 3, 5, 6, 8, 14, 17], "persist": 1, "petzold": 10, "physic": 10, "pick": 1, "pip": 13, "place": 1, "pleas": 14, "plot": [0, 1, 3, 5, 8, 12, 17], "plot_mean_stdev": [0, 1], "plot_std_dev_rang": [0, 1], "plotli": 1, "plotplotli": [0, 1], "plotplotly_mean_stdev": [0, 1], "plotplotly_std_dev_rang": [0, 1], "plt": 12, "pmid": 10, "pname": 1, "png": 1, "point": [1, 3, 8, 12], "pop": [0, 1], "popen": 5, "popitem": [0, 1], "popul": [1, 5, 6, 12], "posix": 1, "pow": [6, 17], "pre": 6, "prebuild": [5, 6], "precompil": 1, "predefin": 5, "prefer": 5, "prefix": 1, "prepar": [1, 5, 6], "present": [1, 6], "preserv": 1, "press": 1, "previou": [1, 5, 10], "previous": [1, 3, 5, 8], "print": 1, "print_text_head": [0, 1], "prior": 1, "prioriti": 1, "privat": 1, "problem": 14, "problem_with_nam": [0, 1], "process": [5, 12, 17], "produc": [1, 3, 5, 6, 8, 12], "product": [1, 12, 17], "profil": [1, 3, 5, 6, 8], "profile_react": [3, 8], "progress": [3, 5, 8], "project": 14, "propens": [1, 3, 5, 6, 8, 10], "propensity_funct": [1, 17], "properli": 1, "properti": [1, 6], "prove": 14, "provid": [1, 3, 5, 6, 8, 12], "public": [1, 14, 17], "public_var": [0, 1], "py": 10, "pypi": 14, "pyplot": 12, "python": [1, 6, 10, 12, 13, 14, 17], "python3": 13, "pythonconvert": [5, 6], "qualnam": [3, 5], "question": 14, "r": [10, 12], "r1": [1, 12, 17], "r2": [1, 12, 17], "r3": [12, 17], "r4": 17, "r_c": 12, "r_creation": 12, "r_d": 12, "r_dissoci": 12, "rais": [1, 6], "ran": 1, "random": [1, 3, 5, 8, 12], "rang": [1, 12], "rate": [1, 6, 12, 17], "rate_rul": [1, 6], "raterul": [0, 6], "rateruleerror": [0, 1], "rc": [0, 1, 3, 5, 8], "react": 12, "reactant": [1, 12, 17], "reaction": [0, 3, 5, 6, 8, 10, 12, 17], "reactionerror": [0, 1], "read": [1, 3, 5, 14], "reader": 5, "readi": 1, "rebuild": 6, "receiv": 5, "recommend": 1, "record": [3, 8], "recurs": [1, 13], "recursive_transl": [0, 1], "reduc": 1, "ref": 1, "refer": [1, 3, 8, 12], "referenc": 1, "refresh": [1, 3, 5, 8], "regist": [5, 14], "registr": 14, "regular": 5, "reject": 6, "rel": [3, 5, 8], "relat": 6, "relev": 6, "remain": 1, "rememb": 1, "remov": [0, 1, 6], "repeat": 1, "repeatedli": 1, "repeattim": [0, 1], "replac": [0, 1], "report": 14, "report_silently_with_sbml_error": 1, "repres": [1, 6, 12, 17], "represent": [1, 12], "requir": [1, 6], "reserved_nam": [0, 1, 5, 6], "resolut": [0, 1], "resolv": [1, 6], "resolveparamt": 1, "respect": [1, 12], "rest": 17, "restrict": 1, "result": [0, 3, 5, 6, 8, 10, 12, 17], "resultserror": [0, 1], "resum": [1, 3, 5, 8, 10], "retriev": 1, "return": [1, 3, 5, 6, 8, 10, 12, 17], "return_plotly_figur": 1, "return_stochss_model": [1, 11], "revers": [0, 1, 12], "root": [3, 5, 8, 12], "round": 6, "rshift": 6, "rtol": [3, 8], "rtype": [3, 5, 6, 8], "rule": [1, 6], "run": [0, 1, 3, 5, 6, 8, 12, 17], "runtim": 6, "rvalu": 6, "rxntype": 1, "s_result": 17, "same": [1, 3, 5, 8, 12, 17], "sampl": [1, 3, 5, 6, 8, 12], "sanit": [1, 6], "sanitized_express": [0, 1], "sanitized_formula": [0, 1], "sanitized_funct": [0, 1], "sanitized_parameter_nam": [0, 1], "sanitized_propensity_funct": [0, 1], "sanitized_species_nam": [0, 1], "sanitizedmodel": [5, 6], "save": [1, 3, 8], "save_png": 1, "sbml": [0, 1, 6, 12, 14], "sbmlerror": [0, 1], "sbmlexport": 0, "sbmlimport": 0, "scalar": 1, "scipi": [3, 8], "scope": 1, "script": 17, "sd": 1, "search": [1, 14], "second": [0, 1, 3, 5, 8], "see": [1, 3, 8], "seed": [1, 3, 5, 8, 12], "select": [3, 5, 10], "self": 1, "sent": 1, "sep": 1, "separ": 1, "sequenc": 1, "sequenti": 1, "serial": [0, 1], "serializi": 1, "set": [1, 3, 5, 6, 8, 12], "set_annot": [0, 1], "set_initial_valu": [0, 1], "set_paramet": [0, 1], "set_propens": [0, 1], "set_rat": [0, 1], "set_unit": [0, 1], "setcod": [0, 1], "setdefault": [0, 1], "setter": 1, "settyp": [0, 1], "sever": 14, "shallow": 1, "shape": 5, "shell": 13, "short": [12, 14], "should": [1, 3, 5, 6, 8, 13], "show_legend": 1, "show_titl": 1, "shown": 1, "signal": 1, "signatur": 5, "silent": 1, "simdecod": [3, 5], "simpl": 5, "simpli": 1, "simplifi": 1, "simul": [1, 3, 5, 6, 8, 10, 12, 14, 17], "simulation_data": 10, "simulation_nam": 6, "simulationerror": [0, 1], "simulationreturncod": [3, 5], "simulationtimeouterror": [0, 1], "simultan": [3, 5, 8], "singl": [1, 3, 5, 6, 8], "situat": [12, 17], "size": [1, 3, 5, 8, 10], "smaller": 5, "so": [6, 12], "sol_model": 1, "sole": 12, "solut": [1, 3, 5, 8], "solv": 12, "solver": [0, 1, 14, 17], "solver_arg": 1, "solver_nam": 1, "solvererror": [0, 1], "solverutil": [0, 3], "some": [1, 12, 17], "sort": [0, 1, 6], "sortabl": 1, "sortableobject": 0, "sourc": [1, 3, 5, 6, 8, 10, 11, 13, 14], "space": 1, "span": [1, 12, 17], "spatial": 17, "spatialpi": 1, "speci": [0, 3, 5, 6, 10, 12, 17], "special_charact": [0, 1], "species_map": 1, "species_pars": [3, 10], "specieserror": [0, 1], "specif": [1, 6], "specifi": [1, 3, 5, 6, 8], "sporad": 5, "src_dict": 1, "ss": 1, "ssa": [1, 3, 5, 8, 14], "ssa_c_solv": [0, 3], "ssa_solv": [0, 3], "ssacsolv": [0, 1, 3, 5], "stamp": 1, "standard": 1, "start": [1, 3, 5], "state": [1, 3, 5, 8, 10], "statement": 6, "static": [1, 3, 5], "statu": 1, "stddev_ensembl": [0, 1], "stdout": 5, "step": [1, 3, 5, 8, 10, 12], "stepsiz": [3, 5], "stochast": [1, 3, 5, 6, 8, 12, 14, 17], "stochml": 1, "stochmldocu": [0, 1], "stochmlimporterror": [0, 1], "stochss": [0, 1, 14], "stochssexport": 0, "stoichiometri": [1, 6, 12], "stop": [1, 5, 10], "stop_ev": [0, 3, 8], "store": [1, 3, 8], "str": [1, 3, 5, 6, 8, 11], "string": [1, 3, 5, 6, 8], "strip": 1, "strptime": [0, 1], "struct": 6, "structur": 12, "style": 1, "sub": 6, "subarrai": 12, "subclass": [1, 17], "submodul": [0, 3], "subpackag": 14, "subprocess": 5, "substitut": 1, "success": 1, "sucesss": 1, "suffix": 1, "suggest": [5, 14], "sundial": [3, 5], "suppli": 12, "support": [1, 3, 5, 6, 8, 10, 14], "switch": [1, 12, 17], "switch_min": 1, "switch_tol": 1, "syntax": 6, "syntaxerror": 6, "system": [1, 3, 5, 6, 8, 12, 13, 14], "t": [1, 3, 5, 6, 8, 10, 12, 17], "tabl": 1, "tag": 1, "take": [1, 3, 5, 8], "taken": [1, 3, 8], "target": [0, 1, 3, 5], "tau": [0, 1, 3, 5, 8, 12, 14], "tau_arg": 10, "tau_hybrid_c_solv": [0, 3], "tau_hybrid_solv": [0, 3], "tau_leap": [3, 5], "tau_leaping_c_solv": [0, 3], "tau_leaping_solv": [0, 3], "tau_step": [3, 5], "tau_tol": [3, 5, 8], "tauhybridcsolv": [0, 3, 5], "tauhybridsolv": [0, 1, 3, 8], "tauleapingcsolv": [0, 3, 5], "tauleapingsolv": [0, 3, 8], "temp": 6, "tempfil": 1, "templat": 6, "template_def_propens": [5, 6], "template_def_rate_rul": [5, 6], "template_def_react": [5, 6], "template_def_speci": [5, 6], "template_def_vari": [5, 6], "template_definit": 6, "template_definitions_nam": [5, 6], "template_dir": 6, "template_gen": [3, 5], "template_opt": 6, "template_options_nam": [5, 6], "term": [1, 12], "test": [1, 10], "text": [1, 3, 5, 8], "than": [1, 3, 5, 8], "thei": 1, "them": 6, "thi": [1, 3, 5, 6, 8, 10, 12, 14, 17], "those": [1, 3, 8, 14], "thread": 1, "through": [1, 5, 6], "thu": [12, 17], "time": [0, 1, 3, 5, 8, 10, 12, 14, 17], "time_out": 1, "time_span": 1, "timedelta": 1, "timelin": [1, 3, 8, 10], "timeout": [1, 3, 5, 8], "timepoint": 1, "timer": 1, "timespan": [0, 12, 17], "timespanerror": [0, 1], "timespec": 1, "timestamp": [0, 1], "timestep": 5, "timestop": 10, "timetupl": [0, 1], "timetz": [0, 1], "timezon": 1, "titl": [1, 12, 17], "to_anon": [0, 1], "to_arrai": [0, 1], "to_csv": [0, 1], "to_dict": [0, 1], "to_json": [0, 1], "to_model": [0, 1], "to_nam": [0, 1], "to_str": [0, 1], "togeth": [1, 12], "toggl": 17, "toggle_switch": 17, "toggleswitch": 17, "toler": [1, 3, 5, 8], "tostr": 1, "total": 5, "trace": 1, "tracker": 14, "trade": [3, 5, 8], "trajectori": [0, 1, 3, 5, 8, 12], "trajectory_bas": 1, "trajectory_head": [0, 1], "trajectory_num": 1, "transit": 1, "translat": 1, "translation_t": 1, "translationt": [0, 1], "tree": [1, 6, 13], "trejectori": 1, "trigger": 1, "true": [1, 3, 5, 6, 8], "tspan": [1, 12, 17], "tupl": [1, 3, 5, 6, 8], "two": [1, 12, 17], "type": [1, 3, 5, 6, 8, 12, 13], "typecod": [0, 1], "typic": [3, 8], "tz": 1, "tzinfo": [0, 1], "tzname": [0, 1], "u": 17, "uml_class_diagram": 12, "unaryop": 6, "undefin": 1, "under": 14, "underli": 1, "understood": 1, "unexpect": 1, "uniform": 1, "union": 1, "unit": 1, "unknown": [3, 5], "unsupport": 1, "until": [1, 5], "up": 12, "updat": [0, 1, 6], "update_model_opt": [5, 6], "update_namespac": [0, 1], "update_species_init_valu": [3, 10], "upgrad": 13, "upon": [1, 5], "us": [1, 3, 5, 6, 8, 10, 14, 17], "usag": 14, "use_propens": [5, 6], "use_rate_rul": [5, 6], "use_react": [5, 6], "use_root_find": [3, 5], "use_values_from_trigger_tim": 1, "user": [1, 13, 14], "userdict": [0, 1], "userlist": [0, 1], "usub": 6, "utc": 1, "utcfromtimestamp": [0, 1], "utcnow": [0, 1], "utcoffset": [0, 1], "utctimetupl": [0, 1], "util": [0, 3, 6], "uuu": 1, "v": [1, 14], "valid": [0, 1, 5, 6], "valid_graph_param": [0, 1], "validate_integrator_opt": [0, 1], "validate_model": [0, 1], "validate_reactants_and_product": [0, 1], "validate_sbml_featur": [0, 1], "validate_tspan": [0, 1], "validationerror": [0, 1], "validationvisitor": [5, 6], "valu": [0, 1, 3, 5, 6, 8, 12, 17], "valueerror": 1, "var": 1, "variabl": [1, 3, 5, 6, 10, 12], "variant": 14, "varieti": 14, "verbos": 1, "veri": [3, 5, 8], "verifi": [0, 1], "version": [1, 14], "via": [3, 5, 8], "view": 1, "visit_add": [5, 6], "visit_and": [5, 6], "visit_assign": 6, "visit_binop": [5, 6], "visit_boolop": [5, 6], "visit_byt": [5, 6], "visit_cal": [5, 6], "visit_compar": [5, 6], "visit_const": [5, 6], "visit_div": [5, 6], "visit_ellipsi": [5, 6], "visit_eq": [5, 6], "visit_gt": [5, 6], "visit_lt": [5, 6], "visit_mult": [5, 6], "visit_nam": [5, 6], "visit_nameconst": [5, 6], "visit_noteq": [5, 6], "visit_num": [5, 6], "visit_or": [5, 6], "visit_pow": [5, 6], "visit_str": [5, 6], "visit_sub": [5, 6], "visit_unaryop": [5, 6], "visit_usub": [5, 6], "visual": 12, "vode": [3, 8], "vol": 1, "volum": [1, 10], "w": 1, "wa": [1, 10], "wai": [5, 12], "we": [1, 12, 14, 17], "well": [1, 6, 14, 17], "were": [1, 6], "what": [1, 6], "when": [1, 6, 10, 12], "where": [1, 12], "whether": [1, 5, 6], "which": [1, 3, 5, 6, 8, 10, 12], "whitespac": 1, "who": 6, "whose": 1, "width": 1, "window": 13, "wish": 1, "with_blacklist": [5, 6], "with_callback": [3, 5], "with_namespac": [5, 6], "within": [1, 12, 17], "without": 17, "work": 5, "would": 1, "wrap": 6, "wrapper": 1, "write": [1, 6], "write_definit": [5, 6], "write_templ": [5, 6], "written": 6, "x": 1, "xaxis_label": 1, "xml": 1, "xscale": 1, "y": [1, 10], "yaxis_label": 1, "year": 1, "yield": [3, 5, 8], "you": [1, 13, 14, 17], "your": [1, 13], "yscale": 1, "yyyi": 1, "zvode": [3, 8]}, "titles": ["gillespy2 package", "gillespy2.core package", "gillespy2.sbml package", "gillespy2.solvers package", "gillespy2.solvers.auto package", "gillespy2.solvers.cpp package", "gillespy2.solvers.cpp.build package", "gillespy2.solvers.cython package", "gillespy2.solvers.numpy package", "gillespy2.solvers.stochkit package", "gillespy2.solvers.utilities package", "gillespy2.stochss package", "Basic usage", "Installation", "Documentation for GillesPy2 1.8.3", "Tutorial: using solvers", "Tutorial: using SBML", "Tutorial: ODE vs. SSA"], "titleterms": {"1": 14, "3": 14, "8": 14, "altern": 13, "api": 14, "assignmentrul": 1, "auto": 4, "basic": 12, "build": 6, "build_engin": 6, "c_decod": 5, "c_solver": 5, "cle_solv": 8, "cleanup": 1, "code": 13, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "copi": 14, "core": 1, "cpp": [5, 6], "cpp_support_test": 10, "cython": 7, "cython_ssa_solv": 7, "differ": 12, "document": 14, "event": 1, "exampl": 12, "express": 6, "functiondefinit": 1, "get": 14, "gillespy2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "gillespyerror": 1, "gillespysolv": 1, "help": 14, "indic": 14, "instal": 13, "jsonifi": 1, "livegraph": 1, "make": 6, "method": 13, "model": 1, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "numpi": 8, "od": 17, "ode_c_solv": 5, "ode_solv": 8, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "paramet": 1, "prefer": 13, "pypi": 13, "raterul": 1, "reaction": 1, "refer": 14, "repositori": 13, "result": 1, "sbml": [2, 16], "sbmlexport": 2, "sbmlimport": 2, "select": 12, "simpl": 12, "solver": [3, 4, 5, 6, 7, 8, 9, 10, 12, 15], "solverutil": 10, "sortableobject": 1, "speci": 1, "ssa": 17, "ssa_c_solv": 5, "ssa_solv": [4, 8], "start": 14, "stochkit": 9, "stochkit_solv": 9, "stochss": 11, "stochssexport": 11, "submodul": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "subpackag": [0, 3, 5], "tabl": 14, "tau": 10, "tau_hybrid_c_solv": 5, "tau_hybrid_solv": 8, "tau_leaping_c_solv": 5, "tau_leaping_solv": 8, "template_gen": 6, "timespan": 1, "tutori": [14, 15, 16, 17], "us": [12, 13, 15, 16], "usag": 12, "util": 10, "v": 17}})